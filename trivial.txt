comment to avoid warning
/* coverity[check_return] */
/* coverity[suspicious_sizeof] */

https://github.com/autozimu/LanguageClient-neovim
https://people.freebsd.org/~gahr/lc.vim

move *.rc to ~/.mutt/
move *.mbox to ~/mail/

--------------------------------------------------------------------------------

parse_tags_transformed - Parse a custom expando of the form, "%G?" where '?' is an alphabetic character.
  	test '?' is [A-Za-z]?

quick guides to
	format strings
	tagging
	alias labels
		document and asciinema alias tags:

doc tags in alias, mail to user ml
	add to dyk

lua / lua-source aren't documented ANYWHERE
	need feature page with examples

good first issue?
	add tag-pattern to the browser -- useful for compose-attach
		if multi-selection is allowed

attach refactor
	libattach
	dlg(view)attach
	pass attach list to functions
		(c.f. tagged emails)

"Out of memory" translation still used?!

note alx: ptr vs pptr

apply colour to a column
	find the index_format node when the `color` command is used
	or when $index_format is set
what about row colours?

extend
	`color header green default '^Subject'`
	to allow partial matches, like status color does
	e.g.
		color header green default '^Subject: (.*)' 1
	match the text of the subject only

$attach_status to configure the AttachBar
	default to "Attachments" ?
	or "Attachments: %n"
	what else could we display?
	cumulative size?
	allow *email* expandos, e.g. To: %t, Subject: %s!

Is this ever true?
	_fmt(OP_SEARCH, N_("search for a regular expression")) \
	or are we always searching for a *pattern*?

for the Menu,
	where is the "deleted" colour?
	where is the dedicated "tagged" colour?
	color index fg bg "~T" !
	create colour "links" first

docs: improve transform-links.vim
	update deprecated.patch
	put in repo with README

coverage core (simple)
	command
	config_cache
	neomutt
	much of mailbox

Menu: rename line to row?
	int (*make_entry)(struct Menu *menu, int line, int max_cols, struct Buffer *buf);
	need to fix Menu.search() too

roccoblues
	when you look in buffer.h you'll notice that most of the time str in the name
	signifies a char * but not always. buf_addstr vs. buf_insert. Or buf_startswith
	should be buf_startswith_str because we could also have a buf_startwith(Buffer, Buffer)?

bare mode cf weechat
	wrapping, markers '+', scrollbar
	all interfere with copy'n'paste and urls
	<bare-mode> drop into basic pager -- endwin()
		bind to Ctrl-B
	don't wrap, just dump email to screen
	let terminal do page up / down
	optionally use ansi sequences for urls?
		probably not necessary
	'q' <quit> to exit
	eliminates need for urlview / urlscan
	why not use <pipe-message>cat<enter> ?

unify Address Groups and Alias Tags
	then group patterns match tags
	%c GROUP   messages carbon-copied to any member of GROUP
	%C GROUP   messages either to:, cc: or bcc: to any member of GROUP
	%e GROUP   messages which contain a member of GROUP in the 'Sender' field
	%f GROUP   messages originating from any member of GROUP
	%L GROUP   message either originated or received by any member of GROUP
group commands
	alias        [ -group name ...] key address [ , address ...]
	unalias      [ -group name ...] { * | key ... }
	-------------
	alternates   [ -group name ...] regex [ regex ...]
	unalternates [ -group name ...] { * | regex ... }
	-------------
	group        [ -group name ...] {     -rx regex ... | -addr address ... }
	ungroup      [ -group name ...] { * | -rx regex ... | -addr address ... }
	-------------
	lists        [ -group name ...]       regex [ regex ...]
	unlists      [ -group name ...] { * | regex ... }
	-------------
	subscribe    [ -group name ...]       regex [ regex ...]
	unsubscribe  [ -group name ...] { * | regex ... }
add syntax: <mail>@group to send to entire group?

tests: check which dummy() {} functions are still needed

docs/config
	urls aren't linkified https://...

translations
	need printf format ordering doc
	msgid "Option %s has an invalid type %d"
	msgstr "Le type %2$d de l'option %1$s est invalide"

split colours?
	common enum of domains: MT_INDEX, MT_ALIAS, ...
	private set of colours MT_IND_SUBJECT
	cf ExpandoDomain
	separate `struct RegexColorList IndexList`
	probably means init() and cleanup() functions for each library
	what about parsing?

compose: attach lots of files
	select last attachment
	step-shrink the terminal so selection isn't visible
	selection isn't visible!

docs for expando architecture

dialogs 21 * Local variable address stored in non-local memory
	refactor callers
	dynamically allocate data
	delegate ownership to menu?
		probably doesn't make sense for menu to own it

quoted colours not merged correctly
	color quoted default red
	color body green default .
quoted text should be green red

replicate LOCALES_HACK in the tests
	if nobody complains, deprecate the configure option

merge (almost identical)
	struct Regex *regex_new(const char *str, uint32_t flags, struct Buffer *err)
	struct Regex *mutt_regex_new(const char *str, uint32_t flags, struct Buffer *err)

use to disable emojis?
	set ascii_chars = no
from irc
	dmrz	is there a way to just turn of display of emoji in neomutt?
	dmrz	emoji are displaying wrong for me, and i suspect fixing this would be somewhat complicated, so i'll like to just turn them off
	dmrz	("displaying wrong" = covering multiple terminal lines)
	turned out to be a font problem

bisect
	notmuch backend altering headers!
	adding mbox-style "Status: O" and "Tags: inbox"

update gfx repo compose screenshots/etc with preview window
	check docs/website/etc

change help page headings from:
	$flag_chars:
	$crypt_chars:
	$to_chars:
to
	set flag_chars = "*!DdrONon- "
	set crypt_chars = "SPsK "
	set to_chars = " +TCFLR"
need to "fix" the help file column layout first

flatcap/vim-cpp -> neomutt/vim-neomutt-source ?

MT_COLOR_CONCEAL "conceal" -- not just invisible, not _there_
	could use for signatures, headers (weeding), toggle-quoted, etc
	does conceal '.*' leave a blank line?
		probably, should kill the line
	alternatively, leave blank line, but squash multiple concealed lines
	set conceal_level = [0123]
	toggle conceal_level
		to toggle visibility
	set conceal_char = '†'
		cf vim
	set line default colour to CONCEAL?
		but then we lose the colour for when it's not hidden
		have a line-level bool for conceal?

idea from irc:
	index_format expando for the alias short-name
		alias bob "Robert Smith <rs@example.com>"
	gives "bob" in the index
	how?
		need HashTable of alias short names

not true, mutt/file.c
	/* This is defined in POSIX:2008 which isn't a build requirement */
	#ifndef O_NOFOLLOW
	#define O_NOFOLLOW 0
	#endif

add :help global command to do <help>
	how would it get the context for the functions?
		however it works, this mechanism would be
		needed for mouse click handling
	use the focus?

help page
	sort option: binding, function
	only applies to *bound* keys
	unbound are always sorted

add sponsorship info to `neomutt -v`
	what about the <help> page too?

colour notifications
	might want more destinction for RegexColors
	*which* RegexColor was added / removed
	e.g. { MT_COLOR_BODY, REGEX_ADDED, "http://..." }
		or index into RegexColorList / Array

code-scanning: examine
	27 Poorly documented large function

update copyright dates, versions, etc
	for all of 2024
	for my changes of 2025
	summary to ml + twitter
		x commits
		y users
		z releases

change the discussion issue template to redirect users to the discussions area

`neomutt -vv` recalc top ten contributors
	(and record the method by which I calc'd it)

syntax highlighting plugin for the Pager
	define rules
	line-matching (equivalent to `color body fg bg pattern`)
	begin-end rules, e.g. signature
rule signature
	apply-to: folder [pattern]  OR  email [pattern]
		folder pattern => folder-hook
		email pattern => message-hook?
	begin-pattern: '^-- $'
	end-pattern:   '^$'
	max-lines: 4
	color: fg bg
	conceal: yes

create "limit" rules for concealing emails?
	muting conversations?

IRC 2025-01-07
	   gahr | I wonder if we should have different helps
	   gahr | I only recently discovered that Message flags are there, at the bottom
	   gahr | perhaps we should have a 'help functions', 'help macros', 'help flag_chars', ...
	flatcap | yes, I've considered that. there are a couple of slight issues to work out first...
	flatcap | first: the help page has hard-coded knowledge -- like those index flags
	flatcap | we could do with a mechanism (API) to gather the help in a context-specific way
	flatcap | second: `:help` would be a global command, so that's probably the same problem
	flatcap | having the function <help> `?` is very accessible...
	      * | flatcap wonders: what is the user searching for when they hit <help> ?
	flatcap | perhaps: <help> gives you a context-specific description of *where* you are, *what* you're looking at, *what* you can do next
	flatcap | from there it'd be nice if pressing a single key (1) Keybindings, (2) flag chars, etc  would take you to the next page
	flatcap | (also directly accessible by `:help flag-chars`, etc
	put those other pages in *tabs*!
	Tabs: [1: Intro] [2: Keys] [3: Macros] [4: Unbound] [5: Flag Chars]
		<Tab> or [12345] to switch between them

close other repo discussions
closed, locked, pinned issue:
enhancement/idea link / template -> discussions
	"🛟 I Need Help", "💡 I Have Ideas" "♥️  I Want to Help"

certificates
	add relatives to timestamps (X ago, for Y)
	This certificate is valid
	   from Thu, 26 Dec 2024 09:01:01 UTC (x weeks ago)
	     to Wed, 26 Mar 2025 09:01:00 UTC (for y months)
	means lots more translations!
	also key selection

README.md
	warning/note/information/tip blocks!
	> [!NOTE]
	> markdown text
	> [!TIP]
	> [!IMPORTANT]
	> [!WARNING]
installation
	## Installation
	[![Packaging status](https://repology.org/badge/vertical-allrepos/bat-cat.svg?columns=3&exclude_unsupported=1)](https://repology.org/project/bat-cat/versions)
	https://repology.org/badge/vertical-allrepos/neomutt.svg?columns=3&exclude_unsupported=1

searching the index with `~i REGEX` matching message ids is problematic
	they often contain regex special characters
	alter the docs to make this clear
add a new syntax to the `~i` pattern...
	`~i TEXT`   -- text is regex
	`~i <TEXT>` -- text is literal

Commits as of 2025-01-11
	Year	Mutt	NeoMutt
	2016	 316	    788
	2017	 272	   1615
	2018	 348	   1873
	2019	 419	   1752
	2020	 406	   1070
	2021	 261	   1114
	2022	 130	    714
	2023	  20	   1123
	2024	  10	    600
	2025	   0	     30

drop 'i' (index?) binding for <quit>/<exit> for pager
	non-intuitive
in help use 'q' <quit> where data is read-only, e.g. info pages
	accept 'x' <exit> also
elsewhere
	'q' <quit> => save and exit
	'x' <exit> => exit without saving

get neomutt on every available "awesome" list

~/.config/neomutt/theme.rc
	file or symlink

problem with address completion
	using <complete>
		single match opens alias dialog
		when it shouldn't

how to end-to-end test the autocrypt functions?
	discussion

test build with ubsan
	weekly github action

Config system
	reduce all error messages to error codes
	there're a finite number of ways the config system can fail
	possible for the 'generic' failures, "Option %s may not be negative"
	but setting a regex or expando can return custom errors

sponsor
	yutsuten renew
	anon bitcoin

expando long-text -- review
	esp, "flags2" !
	need docs -- how?

colour - what happens if you set both (simple/palette) and truecolor?
	we want to share both; if $color_directcolor is set then use
	truecolor, else use (simple/palette)
	avoids the need for multiple theme files
	AttrColor needs link to other AttrColors
		need refcounting
		or be able to surived the *linked* object disappearing
	Use linked colours to support truecolor -> simple fallbacks

SimpleBar / ExpandoBar
	are they compatible?
	can they be merged?

Help Page Tabs
	do we need to implement actual Window tabs?
	can we just fake it? (much simpler)
		ideally want a PagedFile for each tab
		=> separate windows would be simpler
	navigate between pages with any of:
		1..n
		<Tab> / <Ctrl-Tab>
		<Ctrl-PgUp> / <Ctrl-PgDown>
	auto-generate table of contents
	if ($use_nerd_fonts = yes)
		we can use advanced chars to sculpt tabs
		like vim airline status bar
		nerd-font.rc sample?
	Unicode:
		⎽⎽⎽⎽⎽◢█1 Help█◣╱ 2 Index ╲╱ 3 Pager ╲⎽⎽⎽⎽⎽⎽⎽⎽⎽
		syn match reverse "1 Help"
browser tabs?
	help page first

weekly build action with
	-D_FORTIFY_SOURCE=1 or 2
	24 * warning: dereferencing type-punned pointer might break strict-aliasing rules
	e.g. mutt/list.c:153:18:

air (on irc)
	#define SUPPRESS_UNUSED_WARNING(v) (void)v;
	#define SUPPRESS_UNUSED_RESULT_WARNING(fn_call) do{if(fn_call){/*warn_unused_result*/}}while(0)

find clean/dirty strwidth() / wcwidth() uses

release: commit count

coverity defects
	array (now using int)
	menu_get that could fail

docs for %{name} expandos

fold lines that don't match the search pattern
	:set foldenable foldmethod=expr foldminlines=0 foldexpr=getline(v:lnum)!~@/

expando for a divider character
	if ($ascii_chars = yes), then use ascii | pipe
	otherwise use unicode │ vertical bar

merge notebook into brain-dump

old notebook: type up or rip up
	photo first

use git blame to put weekly/monthly data lines in this file
	then archive the old stuff off once a month

