simplify cppcheck example
	cppcheck --enable=all --language=c --std=c99 -i autosetup --platform=unspecified -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048 -I/usr/include -I/usr/include/mit-krb5 -I. --output-file=cppcheck.xml --xml --xml-version=2 <path to neomutt source code directory>
	cppcheck --enable=all --language=c --std=c99 -i autosetup -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048  -I. --output-file=c1  .
use --check-config to list missing header files
	cppcheck --verbose --check-config --enable=all --language=c --std=c99 -i autosetup -i test -DPATH_MAX=2048 -D__x86_64__ -I. -I/usr/include -I/usr/lib/gcc/x86_64-redhat-linux/8/include -I/usr/include/qdbm --output-file=c1 .
	ignore doc dir too

fix !USE_NNTP build
	check !USE_SIDEBAR build

free functions to take (**ptr)
then deref to Type *t = *ptr;

add printf format checkers to mutt_message, mutt_debug, etc

test int against 0
	what about ALL int members?

demote to warnings
mutt_error(_("Warning: XXX"));

simplify all our:  if (X) free(X)
add doxy param doc: (NULL safe) ?

if (!(a && b))
if (!(a || b))
ag 'if \(!\(.*(&&|\|\|).*\)\)'

ag '\(!\((.*) && (.*)\)\)'
ag '\(!\((.*) \|\| (.*)\)\)'

eliminate enum AccountType?
use enum MailboxType
	what about smtp?
	add entry?

split up multiple assignments
	grep " = [^,;]* = "
	grep " = [^,;]* [!=]= "

conditional constants - reduce to a comment
	Hmm... non-functional enum entries might cause problems
	MENU_KEY_SELECT_PGP
	MENU_MIX
	MT_COLOR_DIVIDER
	MUTT_PAT_NEWSGROUPS
	MUTT_OPEN_HOOK
	REDRAW_SIDEBAR

body_copy() : move foreach param -> param_dup()

check all src against vim folding

pager
	replace CHECK_* macros with function
	bool pre_requisite(flag|flag, quiet);
	if (!pre_requisite())
		break
	need interface for index/pager operations?
	what are possible outcomes?
	break (continue loop)
	exit (function)
	fallthrough? NO refactor to avoid

replace "for (int" -> size_t in libmutt
	177 occurrences

browser.c has a lot of
	struct Email *tmp;
	tmp's a bad name for a variable
	scratch is too

move all
	if (!param)
	to start of function
	return early
	ag "^ +if \(.*\n +return"
	2540 functions
	start with libmutt?

decrypt_part - Explain r_is_signed better
	returns -1, 0, 1, 2

are these identical? YES
	static char crypt_flags(KeyFlags flags)
	static char pgp_flags(KeyFlags flags)

convert to enum?
	struct ConnAccount.type
		unsigned char type;     ///< Connection type, e.g. #MUTT_ACCT_TYPE_IMAP

config system
	can it return warnings?
	yes, but it doesn't

init.c
	getsid() is POSIX2001
	no need for #ifdef?
	exists in cygwin

variables, urgh! sendlib.c
	mutt_lookup_mime_type() int szf, sze, cur_sze;

deglobalise
	EnvList in mutt/envlist.c
	C_HiddenTags in driver_tags_add()

string fn to pretty print \t, \r, \n for tests
	handle NULL, quote string

wrong name, should be _free()
	void mutt_addrlist_clear(struct AddressList *al)
	...
	mutt_addr_free(&a);
	hmm... but it doesn't free the actual AddressList

This doesn't seem to be documented in neomutt's manual either
I wonder if we could kill this unexpected behaviour
  /* This is an undocumented feature of ELM pointed out to me by Felix von
   * Leitner <leitner@prz.fu-berlin.de> */
  if (mutt_str_strcmp(mutt_b2s(buf), ".") == 0)
    mutt_buffer_strcpy(buf, LastSaveFolder);
  else
    mutt_str_strfcpy(LastSaveFolder, mutt_b2s(buf), sizeof(LastSaveFolder));

SEND_NO_FREE_HEADER refers to an Email, SEND_NO_FREE_EMAIL?

should be _free() -> need _new() too
	void mutt_bcache_close(struct BodyCache **bcache)

flags typedef?
	/* force flags passed to mutt_mailbox_check() */
	#define MUTT_MAILBOX_CHECK_FORCE       (1 << 0)
	#define MUTT_MAILBOX_CHECK_FORCE_STATS (1 << 1)

flagify
	#define MUTT_UNBIND  1<<0
	#define MUTT_UNMACRO 1<<1

find out meaning of "ci_" prefix, or drop it (curses interface?)
	CI_is_return
	ci_bounce_message
		bounce_message
		ci_bounce_message
		mutt_attach_bounce
		mutt_bounce_message
	ci_first_message
	ci_next_undeleted
	ci_previous_undeleted
	ci_send_message
		mix_send_message
		mutt_resend_message
		send_message

eliminate complicated macros (multiline, conditionals, many callers)
refactor complicated or oft-used macros
	email/mime.h:85:1:   ENCODING         7
	email/mime.h:77:1:   is_multipart     8
	mutt/buffer.h:43:1:  MoreArgs         78
	mutt/regex3.h:52:1:  REG_COMP         18
	mutt/string2.h:47:1: SKIPWS           51
	state.h:56:1:        state_putc       30
	state.h:55:1:        state_puts       98
	mutt/string2.h:60:1: terminate_buffer 9
	mutt/string2.h:51:1: terminate_string 5
	email/mime.h:83:1:   TYPE             35

main.c
	text outside of else, search for others (over 60 comments before else)
	/* If editing the infile, keep it around afterwards so
	 * it doesn't get unlinked, and we can rebuild the draft_file */
	else

neomuttlog.vim
	offer to vim ml

needs typedef
needs NO_FLAGS
#define U_PATH          (1 << 1)

why are enum SortType numbered?
	SORT_ALPHA    =  3, ///< Required by makedoc.c
	SORT_SUBJECT  =  3, ///< Sort by the email's subject
	do we need SORT_MAX
	do we need ANY X_MAX enum values?

should use a Buffer
	void mutt_default_save(char *path, size_t pathlen, struct Email *e)
	problem: it leads to format functions that take buf, buflen

variable i used for rc and `for` loops
	static int mbox_mbox_sync(struct Mailbox *m, int *index_hint)

shellcheck hcachever.sh
	test output against various releases

move to email/body? (and rename)
	struct Body *mutt_make_multipart(struct Body *b)
	struct Body *mutt_remove_multipart(struct Body *b)
	create email/multipart.c ?

base32 doesn't belong in mutt/random.c
	maybe in mutt/string.c

config
	have macro -- VALID_PTR() for native retvals?

not closed on exit
	static FILE *fp_random;

flip to match M.verbose
	#define MUTT_QUIET         (1 << 3) ///< Do not print any messages

change to **ptr, look for others
	address_free             config/address.c
	aliaslist_free           alias/alias.c
	buffer_free              mutt/pool.c
	compress_info_free       compmbox/compress.c
	crypt_key_free           ncrypt/crypt_gpgme.c
	crypto_module_free       ncrypt/crypt_mod.c
	defs_free                gui/color.c
	driver_tags_free         email/tags.c
	key_free                 ncrypt/pgplib.c
	maildir_free             maildir/shared.c
	mbtable_free             config/mbtable.c
	menu_free                autocrypt/dlgautocrypt.c
	mhs_sequences_free       maildir/mh.c
	mix_type2_list_free      remailer.c
	monitor_check_free       monitor.c
	monitor_info_free        monitor.c
	mutt_actx_entries_free   email/attach.c
	mutt_autocrypthdr_free   email/envelope.c
	mutt_buffer_pool_free    mutt/pool.c
	mutt_color_free          gui/color.c
	mutt_envlist_free        mutt/envlist.c
	mutt_grouplist_free      address/group.c
	mutt_hash_set_destructor mutt/hash.c
	mutt_hcache_free_raw     hcache/hcache.c
	mutt_hist_free           history/history.c
	mutt_keys_free           keymap.c
	mutt_list_free           mutt/list.c
	mutt_list_free_type      mutt/list.c
	mutt_mem_free            mutt/memory.c
	mutt_opts_free           init.c
	mutt_param_free          email/parameter.c
	mutt_param_free_one      email/parameter.c
	mutt_pattern_free        pattern/compile.c
	mutt_prex_free           mutt/prex.c
	mutt_regex_free          mutt/regex.c
	mutt_regexlist_free      mutt/regex.c
	mutt_replacelist_free    mutt/regex.c
	mutt_window_free_all     gui/mutt_window.c
	mutt_winlist_free        gui/mutt_window.c
	myvarlist_free           myvar.c
	nm_db_free               notmuch/db.c
	nntp_acache_free         nntp/newsrc.c
	nntp_hashelem_free       nntp/nntp.c
	parameter_free           email/rfc2231.c
	pgp_key_free             ncrypt/pgplib.c
	pgp_uid_free             ncrypt/pgplib.c
	quotes_free              gui/color.c
	recipient_set_free       ncrypt/crypt_gpgme.c
	regex_free               config/regex.c
	slist_free               mutt/slist.c
	smime_key_free           ncrypt/smime.c
	zstrm_free               conn/zstrm.c

rename s/mutt_buffer_select_file/dlg_browser/
	factor out the 'dialog' part first

capitalisation?
	HCacheEntry
	ICommand
	MUpdate
	QClass
	MSN

MXAPI: macro fake prototypes like config
	extern struct MxOps MxImapOps;

isn't used!
	MT_COLOR_MESSAGE_LOG

'l' bad choice of param name
	First l chars of both strings are equal

menu globals, not freed on exit?
	can't find where it's freed
	char *SearchBuffers[MENU_MAX];

WRONG - depends on strlen(C_ArrowString)
	why bother for non Braille?
	cursor isn't visible
    /* move the cursor out of the way */
    if (C_ArrowCursor)
      mutt_window_move(menu->win_index, 2, menu->current - menu->top);

update copyright date

add brief README.md to each library dir
	quick description
	links to [devel] arch pages
	links to [user] dialog pages
	note
		which configure options enable the code
		build dependencies
		or push these to the code docs?

neolog vimrc, 'set wrap linebreak showbreak=\ \ \ '

build script
	if clang else gcc
	optional compiler flags

master/main
github/upstream for flatcap repos
sync script looking for upstream remotes pull/push

#define UNUSED(x) UNUSED_ ## x __attribute__((__unused__))

log_disp_terminal doesn't honour log_file_set_level(LL_DEBUG1, false);

swap.  if we're going to stop, do it before a slow operation
	while (((de = readdir(dirp))) && (SigInt != 1))

maildir_parse_flags
        case 'T': /* trashed */
          if (e->flagged && C_FlagSafe)
should set flags, then update in frontend if C_FlagSafe condition is met

rename params
	size_t mutt_mb_mbstowcs(wchar_t **pwbuf, size_t *pwbuflen, size_t i, char *buf);

refactor mutt_hcache_open()
  	move to separate function
	if (hcachever == 0x0) { calc; }

check all string-list config items note the separator character
	alter makedoc to use the slist flags to say:
		string list (comma-separated)
	means adding SLIST_SEP_* flags to docs/config.c

index:
	OP_MAIN_CHANGE_FOLDER vs OP_MAIN_CHANGE_FOLDER_READONLY:
	OP_MAIN_VFOLDER_FROM_QUERY vs OP_MAIN_VFOLDER_FROM_QUERY_READONLY
	vfolder READONLY isn't handled correctly, doesn't follow READONLY path

hcache/restore.c
	static struct Email *restore(const unsigned char *d)
		STAILQ_INIT(&e->tags);
		STAILQ_INIT(&e->chain);
	not nec, done by email_new()
	WRONG - while memcpy is used, STAILQ_INIT's are nec

stats_last_checked isn't set, cf upstream
	buffy.c
	629:67:      (mutt_stat_timespec_compare (sb, MUTT_STAT_MTIME, &mailbox->stats_last_checked) > 0))
	638:16:      mailbox->stats_last_checked = ctx.mtime;

bad C functions
	https://github.com/git/git/blob/master/banned.h

index, unnec? elim
	int attach_msg = OptAttachMsg;

pop/auth.c eliminate #ifdef DEBUG
	(nearly) only use in entire code base

docs: "delimited" lists -> "separated"

scan-build

reorg 'build' to add options conditionally on compiler

refactor into ONE printf, adjust translations to just "Limit:"
	mutt_str_asprintf(&tmp_str, _("Limit: %s"), limit);
	mutt_str_asprintf(&new_title, "%s - %s", menu_name, tmp_str);

test all graphviz (and other debug) functions compile and run

use ctags to look for reserved keywords, e.g. variables called private
	then put in github action

use `gh gist` to update local mirrors
	python scripts need to turn "private" repos into git@ urls

iwyu
	fix scripts to check for 'config.h'
	common.sh file?

look for static functions called mutt_*
	static void mutt_update_recvattach_menu()
	mutt_bcache_move
	mutt_getaddrinfo_a
	mutt_get_winsize
	mutt_is_predicate_recipient
	mutt_is_spool
	mutt_keymaplist_free
	mutt_keymap_free
	mutt_lookup_color
	mutt_make_greeting
	mutt_md5_process_block
	mutt_md5_read_ctx
	mutt_monitor_getch
	mutt_pattern_node_new
	mutt_update_recvattach_menu
	mutt_update_v2r

libmutt.c wrappers for the few functions that use config in
	charset.c, file.c, state.c

copy asan configure/bash scripts to dev page

git lt [NUM]

iwyu: parameterise iwyu.sh '*.c' -> selects correct backend script

add dialog helper functions to get:
	shared data
	priv data
	menu
	etc

rename index vars to idx to avoid index(3)

attach refactor
	libattach
	dlg(view)attach
	pass attach list to functions
		(c.f. tagged emails)

move mutt_X.[ch] into libX
	deps don't matter, it's a separate src file
	just mutt_history.*

move hdrline to libindex?
	rename to 'index'?
	struct HdrFormatInfo

icommands: fold into normal commands, drop separate src files?
	start with indepdendent commands

libbrowser?
	dlgbrowser
	split up deps
	elim Menu->is_mailbox_list!
	elim menu_loop() static local var `last_position`

add X_new()/X_free() wrappers for non-trivial objects
	AttachPtr, QClass, Regex, ListNode
	SmimeKey, PgpUid, MuttThread, Message, Hook

buf, buflen
	* km_expand_key - Get the key string bound to a Keymap
	* @param s   Buffer for the key string
	* @param len Length of buffer

merge mutt_buffer_get_field(), mutt_enter_string_full()
	latter only has one caller

run iwyu with openssl enabled?

NDEBUG warnings around asserts

make sure all notifys doxy their data
struct Notify *notify;    ///< Notifications: #NotifyIndex, #IndexSharedData

10 largest functions
	1087 mutt_buffer_select_file
	1013 index_format_str
	 950 main
	 850 mutt_send_message
	 678 mutt_enter_string_full
	 535 mutt_expando_format
	 443 mutt_rfc822_parse_line
	 440 mutt_pager
	 378 parse_set
	 377 mbox_mbox_sync

dedupe function names:
	add_cert
	add_folder
	append_message
	attach_config_observer
	attach_window_observer
	cmp_version_strings
	create_gpgme_context
	dump_menu
	format_line
	init_mailbox
	mutt_exit
	mutt_file_lock
	mutt_file_unlock
	mutt_resize_screen
	mutt_ssl_socket_setup
	mutt_ssl_starttls
	mutt_str_asprintf
	pgp_check_traditional_one_body
	tls_set_priority

add with/without build tests for autocrypt
	needs vm without libraries installed

add to build-and-test action
	if po/*.po have changed
	msgfmt --statistics -c -o /dev/null po/pl.po

add links in web/dev to gfx repo for arch diagrams etc
	and/or dev list

update web dev translate deployment
	add coverity

neomutt -v output:
	add $LANG?
	multi-column output to reduce lines?

compose/functions.c
	reword joke error message
	What we have here is a failure to make an attachment

merge two sort typedefs
	sort_t
	qsort_compar_t

update test library

docker
	add readme

sync github to all my private gitlab repos (or delete them)

update neomuttrc.vim
	new config with underscores!
		really deprecate old ones?
	colors with attributes

link observer function docs to Event/EventStruct they receive

doc egypt workflow
	CFLAGS -> svg
	make flatcap branch the main?  or merge?

vim plugin
	setlocal keywordprg=echo;echo;neomutt\ -n\ -F\ /dev/null\ -OQ
	extend to ALL neomutt symbols: commands, functions, colors, etc

https://github.com/marketplace/actions/skip-duplicate-actions

commit all changes in all repos and push

create distro-specific dockerfiles, build weekly
bases
	https://hub.docker.com/_/debian
	https://hub.docker.com/_/ubuntu
	https://hub.docker.com/_/archlinux
	which others?
macos?

https://hub.docker.com/r/dovecot/dovecot

actions: check that matrix builds continue on error

logging error fd == -1 ?
	mutt_socket_write_d() -1> a0000 SELECT "INBOX"

rfc2047_decode_addrlist()
	move config code out of loop
	(or out of function?)

strip mirrors of branches

neomutt version "debug" -> "logging"?
	assuming that's what it is

neomutt version
	deprecate the fixed part?
	might interfere with `ifdef` command
	do _those_ features matter if they've been included for so long?
	when did it last change? > 4 years

fix 6 lgtm defects

change browser_sort() to not take *entire* state,
	just the array that needs sorting
	convert all comparision functions to the qsort_r() compatible
	factor out config use to top-level parameter

these aren't *comp* flags, separate flags?
	MUTT_COMP_CLEAR
	MUTT_COMP_PASS
add unbuffered flag?

static struct SmimeKey *smime_ask_for_key(char *prompt, KeyFlags abilities, bool only_public_key)
checks for prompt, but it's always set

find potential places for struct Buffer
	921	ag "([a-z_]+(->[a-z_]+)*), sizeof\(\1\)"
	64	ag "([a-z_]+(->[a-z_]+)*)-\>data, \1-\>dsize"

refactor "not reached"
	ag "not reached" | wc -l
	13

kill #define EXTRA_SPACE (15 + 7 + 2)
	recvcmd.c
	commands.c
heuristic dating back to 2000

reuse yml actions
	uses: google/oss-fuzz/infra/cifuzz/actions/build_fuzzers@master
	# org/repo/dir/dir2/dir3
	# in dir3/actions.yml is run
	set oss-fuzz repo, file
		infra/cifuzz/actions/build_fuzzers/action.yml

useful?
	#if defined(__COVERITY__)

comment to avoid warning
/* coverity[check_return] */
/* coverity[suspicious_sizeof] */

typo?  autocrypt?!
	de.po:msgid "no"
	de.po-msgstr "nein"
vs
	de.po:msgid "No"
	de.po:msgstr "No"

review all reallocs => memset to clear new memory
	email/attach.c has lots!
	mutt_realloc_zero(ptr, size, old_size)

find/read the `git log --date=human` code
	or better still --date=relative

how much work to fix the new_mail command?
	notifications from backends

copy [debug/compose] -> neomutt-old
	update it

action for IRC notifier
	https://github.com/rectalogic/notify-irc
	https://github.com/Gottox/irc-message-action
	on:
		discussion:
			types: [created, edited, answered]

guide
	Pgp: Pseudo Header
	missing other options
	see mutt_parse_crypt_hdr()

translate: "tag-" ?

update {windows,data,overview}.txt

add sample patterns to test/leak.c
	enable pattern coverage
	need mailbox/emails, menu data

improve score
	https://www.mail-tester.com/

actions
	add workflow to all
	merge asan into build-and-test

post freeze:
	colour changes - explanation
	doc reorg
	website update
		intro
		screenshots
	upstream
		small
	unit test coverage
	remaining big
		colour
		get_field
		browser
		small dispatchers
	update copyright date
	update {windows,data,overview}.txt
		dev web section
	compose multipart video
	new coverity defect

post release:
	c99 -> c11? (threading)
	POSIX:2008
	cull issues
	author repo / git mailmap

fix mutt/neomutt shared config

asan analysis mention?
	debian: libasan6
	fedora: libasan

vim neomutt, -noregex not recognised

why doesn't Pager support OpGeneric
	it's skipped in km_dokey()

rename OPs to match functions
	e.g. drop MAIN_
	{ "set-flag", OP_MAIN_SET_FLAG },

star every repo I have write access to

man pages (inc synonyms, deprecated)
neomuttrc.vim

config docs: unify (imap only)-style sections
	dedupe any deprecated/synonym refs

generate list of dialogs (all combinations)
	macros/config to navigate to each
	<write-screen>X<enter>
	sample emails / config
	draw graph
	pager: plain, email, attachment mode
		with / without index
		with / without sidebar
		with / without help
	index: normal, postpone, attach-email
		with / without sidebar
		with / without help

:color OBJ
	display one-line summary of colour in msgwin
	how? need special handler to display the colours
	temporarily take ownership?
	what about colours that take multiple regexes?
		resize msgwin?  how much?

attach/functions.c (check other dispatchers)
	dlg unused?
	struct MuttWindow *dlg = dialog_find(win);
	if (!dlg || !dlg->wdata)
	  return FR_ERROR;

alternative to ASAN?
	clang -ftrivial-auto-var-init=pattern -o jim jim.c

not translated
	snprintf(buf, sizeof(buf), "-- Remailer chain [Length: %d]", len);
change to host list?
	mutt_error(_("Can't get mixmaster's type2.list"));

split browser cases by function
	and other dialogs
	so all <functions> are independent functions()
	check against OpPager lists, etc
	dlg_select_attachment / mutt_attach_display_loop
		attach/recvattach.c:946:       9  mutt_attach_display_loop

cull neomutt mentor project

gnu sasl

try stacked PRs again?

PR template
- All builds and tests are passing
update to mention test files
https://github.com/neomutt/neomutt-test-files

find/kill
	if (x) return (or continue or break)
	else if...
	if (.*\n\s\+{\n\s\+return\>.*\n\s\+}\n\s\+else

fix test warning
	/home/mutt/work/getfield/test/convert/mutt_get_content_info.c:59: warning: the use of `tmpnam' is dangerous, better use `mkstemp'

doesn't cause a repaint of the index
	set narrow_tree = no

root
	weekly ctags
	/usr/include
	/usr/lib/gcc/x86_64-redhat-linux/12/include/
OR
	run ctags OF those dirs, elsewhere
	keep in ~/.cache

update neomutt readme ⭐ 🌟 
add goal of 10 sponsors -> newsletter
twitter sponsors
release
	thanks/sponsors
	link to authors repo

contrib:
	update rpm spec & bugzilla
	notify packagers
		ask them NOT to compress everything!

bisect <tab> to next mail hangs

functionise `git d1`

from python/black:
	Authors
	The author list is quite long nowadays, so it lives in its own file.
	See AUTHORS.md

anything in wiki worth saving?

find all functions returning 0=success,-1=failure
	check they are tested with `if (x() == 0)` not `if (!x())`

oauth2/mutt_oauth2.py.README -> README.md

demote all neo branches to flatcap/DATE

struct Mailbox, comment is misplaced?
	// These next three are only set when MailCheckStats is set

