simplify cppcheck example
	cppcheck --enable=all --language=c --std=c99 -i autosetup --platform=unspecified -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048 -I/usr/include -I/usr/include/mit-krb5 -I. --output-file=cppcheck.xml --xml --xml-version=2 <path to neomutt source code directory>
	cppcheck --enable=all --language=c --std=c99 -i autosetup -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048  -I. --output-file=c1  .
use --check-config to list missing header files
working example 2023-05-03
	cppcheck --verbose --enable=all --language=c --std=c99 -i docs -i autosetup -i test -DPATH_MAX=2048 -D__x86_64__ -I. -I/usr/include -I/usr/lib/gcc/x86_64-redhat-linux/13/include -I/usr/include/qdbm --output-file=c1 .

test int against 0
	what about ALL int members?

demote to warnings
mutt_error(_("Warning: XXX"));

if (!(a && b))
if (!(a || b))
ag 'if \(!\(.*(&&|\|\|).*\)\)'

ag '\(!\((.*) && (.*)\)\)'
ag '\(!\((.*) \|\| (.*)\)\)'

20 largest functions - 2023-04-30 - 8427 lines
	982 index_format_str()
	944 main()
	851 mutt_send_message()
	524 mutt_expando_format()
	431 mutt_rfc822_parse_line()
	398 dlg_pager()
	372 mbox_mbox_sync()
	329 status_format_str()
	318 folder_format_str()
	316 pgp_class_application_handler()
	310 mutt_view_attachment()
	308 dlg_index()
	304 resolve_types()
	296 mutt_copy_hdr()
	295 qstyle_classify()
	294 mutt_pattern_exec()
	294 mx_mbox_close()
	292 mutt_set_flag_update()
	288 display_line()
	281 mutt_init()
20 largest functions - 2024-03-21 - 7399 lines
	943 main
	851 mutt_send_message
	430 mutt_rfc822_parse_line
	389 dlg_pager
	373 mbox_mbox_sync
	323 pgp_class_application_handler
	323 display_line
	315 resolve_types
	310 mutt_view_attachment
	306 mutt_copy_hdr
	301 mx_mbox_close
	299 qstyle_classify
	299 dlg_index
	297 mutt_set_flag
	296 mutt_init
	285 mutt_save_message
	276 parse_pub_line
	265 dlg_browser
	260 nntp_auth
	258 parse_extract_token

eliminate enum AccountType?
use enum MailboxType
	what about smtp?
	add entry?

conditional constants - reduce to a comment
	Hmm... non-functional enum entries might cause problems
	MENU_KEY_SELECT_PGP
	MENU_MIX
	MT_COLOR_DIVIDER
	MUTT_PAT_NEWSGROUPS
	MUTT_OPEN_HOOK
	REDRAW_SIDEBAR

body_copy() : move foreach param -> param_dup()

check all src against vim folding

pager
	replace CHECK_* macros with function
	bool pre_requisite(flag|flag, quiet);
	if (!pre_requisite())
		break
	need interface for index/pager operations?
	what are possible outcomes?
	break (continue loop)
	exit (function)
	fallthrough? NO refactor to avoid

replace "for (int" -> size_t in libmutt
	177 occurrences

browser.c has a lot of
	struct Email *tmp;
	tmp's a bad name for a variable
	scratch is too

move all
	if (!param)
	to start of function
	return early
	ag "^ +if \(.*\n +return"
	2540 functions
	start with libmutt?

decrypt_part - Explain r_is_signed better
	returns -1, 0, 1, 2

are these identical? YES
	static char crypt_flags(KeyFlags flags)
	static char pgp_flags(KeyFlags flags)

Convert to enum?
	struct ConnAccount.type
		unsigned char type;     ///< Connection type, e.g. #MUTT_ACCT_TYPE_IMAP

config system
	can it return warnings?
	yes, but it doesn't

init.c
	getsid() is POSIX2001
	no need for #ifdef?
	exists in cygwin

string fn to pretty print \t, \r, \n for tests
	handle NULL, quote string

wrong name, should be _free()
	void mutt_addrlist_clear(struct AddressList *al)
	...
	mutt_addr_free(&a);
	hmm... but it doesn't free the actual AddressList

This doesn't seem to be documented in neomutt's manual either
I wonder if we could kill this unexpected behaviour
	/* This is an undocumented feature of ELM pointed out to me by Felix von
	 * Leitner <leitner@prz.fu-berlin.de> */
	if (mutt_str_strcmp(mutt_b2s(buf), ".") == 0)
	  mutt_buffer_strcpy(buf, LastSaveFolder);
	else
	  mutt_str_strfcpy(LastSaveFolder, mutt_b2s(buf), sizeof(LastSaveFolder));

flags typedef?
	/* force flags passed to mutt_mailbox_check() */
	#define MUTT_MAILBOX_CHECK_FORCE       (1 << 0)
	#define MUTT_MAILBOX_CHECK_FORCE_STATS (1 << 1)

flagify
	#define MUTT_UNBIND  1<<0
	#define MUTT_UNMACRO 1<<1

eliminate complicated macros (multiline, conditionals, many callers)
refactor complicated or oft-used macros
	email/mime.h:85:1:   ENCODING         7
	email/mime.h:77:1:   is_multipart     8
	mutt/buffer.h:43:1:  MoreArgs         78
	mutt/regex3.h:52:1:  REG_COMP         18
	mutt/string2.h:47:1: SKIPWS           51
	state.h:56:1:        state_putc       30
	state.h:55:1:        state_puts       98
	mutt/string2.h:60:1: terminate_buffer 9
	mutt/string2.h:51:1: terminate_string 5
	email/mime.h:83:1:   TYPE             35

main.c
	text outside of else, search for others (over 60 comments before else)
	/* If editing the infile, keep it around afterwards so
	 * it doesn't get unlinked, and we can rebuild the draft_file */
	else

why are enum SortType numbered?
	SORT_ALPHA    =  3, ///< Required by makedoc.c
	SORT_SUBJECT  =  3, ///< Sort by the email's subject
	do we need SORT_MAX
	do we need ANY X_MAX enum values?

should use a Buffer
	void mutt_default_save(char *path, size_t pathlen, struct Email *e)
	problem: it leads to format functions that take buf, buflen

base32 doesn't belong in mutt/random.c
	maybe in mutt/string.c

config
	have macro -- VALID_PTR() for native retvals?

flip to match M.verbose
	#define MUTT_QUIET         (1 << 3) ///< Do not print any messages

isn't used!
	MT_COLOR_MESSAGE_LOG

add brief README.md to each library dir
	quick description
	links to [devel] arch pages
	links to [user] dialog pages
	note
		which configure options enable the code
		build dependencies
		or push these to the code docs?

neolog vimrc, 'set wrap linebreak showbreak=\ \ \ '

build script
	if clang else gcc
	optional compiler flags

#define UNUSED(x) UNUSED_ ## x __attribute__((__unused__))

log_disp_terminal doesn't honour log_file_set_level(LL_DEBUG1, false);

maildir_parse_flags
        case 'T': /* trashed */
          if (e->flagged && C_FlagSafe)
should set flags, then update in frontend if C_FlagSafe condition is met

check all string-list config items note the separator character
	alter makedoc to use the slist flags to say:
		string list (comma-separated)
	means adding SLIST_SEP_* flags to docs/config.c

index:
	OP_MAIN_CHANGE_FOLDER vs OP_MAIN_CHANGE_FOLDER_READONLY:
	OP_MAIN_VFOLDER_FROM_QUERY vs OP_MAIN_VFOLDER_FROM_QUERY_READONLY
	vfolder READONLY isn't handled correctly, doesn't follow READONLY path

pop/auth.c eliminate #ifdef DEBUG
	(nearly) only use in entire code base

scan-build

reorg 'build' to add options conditionally on compiler

test all graphviz (and other debug) functions compile and run

use ctags to look for reserved keywords, e.g. variables called private
	then put in github action

use `gh gist` to update local mirrors
	python scripts need to turn "private" repos into git@ urls

look for static functions called mutt_*
	ignore callback functions?
	mutt_bcache_move               mutt_poll_fd_add
	mutt_date_parse_rfc5322_strict mutt_poll_fd_remove
	mutt_getaddrinfo               mutt_randbuf
	mutt_getaddrinfo_a             mutt_regmatch_end
	mutt_get_hook_type             mutt_regmatch_len
	mutt_get_winsize               mutt_regmatch_start
	mutt_gsasl_callback            mutt_sasl_cb_authname
	mutt_gsasl_init                mutt_sasl_cb_log
	mutt_is_predicate_recipient    mutt_sasl_cb_pass
	mutt_is_spool                  mutt_sasl_conn_close
	mutt_keymaplist_free           mutt_sasl_conn_open
	mutt_keymap_free               mutt_sasl_conn_poll
	mutt_make_greeting             mutt_sasl_conn_read
	mutt_md5_process_block         mutt_sasl_conn_write
	mutt_md5_read_ctx              mutt_sasl_get_callbacks
	mutt_monitor_getch             mutt_sasl_start
	mutt_parse_idxfmt_hook         mutt_sort_subthreads
	mutt_parse_unhook              mutt_ssl_socket_setup
	mutt_pattern_list_new          mutt_str_is_email_wsp
	mutt_pattern_new               mutt_update_v2r
	mutt_pgp_command

git lt [NUM]

add dialog helper functions to get:
	shared data
	priv data
	menu
	etc

rename index vars to idx to avoid index(3)

attach refactor
	libattach
	dlg(view)attach
	pass attach list to functions
		(c.f. tagged emails)

add X_new()/X_free() wrappers for non-trivial objects
	AttachPtr, QClass, Regex, ListNode
	SmimeKey, PgpUid, MuttThread, Message, Hook

NDEBUG warnings around asserts

update test library

sync github to all my private gitlab repos (or delete them)

vim plugin
	setlocal keywordprg=echo;echo;neomutt\ -n\ -F\ /dev/null\ -OQ
	extend to ALL neomutt symbols: commands, functions, colors, etc

create distro-specific dockerfiles, build weekly
bases
	https://hub.docker.com/_/debian
	https://hub.docker.com/_/ubuntu
	https://hub.docker.com/_/archlinux
	which others?
macos?

actions: check that matrix builds continue on error

logging error fd == -1 ?
	mutt_socket_write_d() -1> a0000 SELECT "INBOX"

neomutt version "debug" -> "logging"?
	assuming that's what it is

change browser_sort() to not take *entire* state,
	just the array that needs sorting
	convert all comparision functions to the qsort_r() compatible
	factor out config use to top-level parameter

these aren't *comp* flags, separate flags?
	MUTT_COMP_CLEAR
	MUTT_COMP_PASS
add unbuffered flag?

static struct SmimeKey *smime_ask_for_key(char *prompt, KeyFlags abilities, bool only_public_key)
checks for prompt, but it's always set

kill #define EXTRA_SPACE (15 + 7 + 2)
	recvcmd.c
	commands.c
heuristic dating back to 2000

reuse yml actions
	uses: google/oss-fuzz/infra/cifuzz/actions/build_fuzzers@master
	# org/repo/dir/dir2/dir3
	# in dir3/actions.yml is run
	set oss-fuzz repo, file
		infra/cifuzz/actions/build_fuzzers/action.yml

useful?
	#if defined(__COVERITY__)

comment to avoid warning
/* coverity[check_return] */
/* coverity[suspicious_sizeof] */

typo?  autocrypt?!
	de.po:msgid "no"
	de.po-msgstr "nein"
vs
	de.po:msgid "No"
	de.po:msgstr "No"

find/read the `git log --date=human` code
	or better still --date=relative

how much work to fix the new_mail command?
	notifications from backends

action for IRC notifier
	https://github.com/rectalogic/notify-irc
	https://github.com/Gottox/irc-message-action
	on:
		discussion:
			types: [created, edited, answered]

translate: "tag-" ?

update {windows,data,overview}.txt

add sample patterns to test/leak.c
	enable pattern coverage
	need mailbox/emails, menu data

improve score
	https://www.mail-tester.com/

post freeze:
	colour changes - explanation
	doc reorg
	website update
		intro
		screenshots
	unit test coverage
	remaining big
		colour
		get_field
		browser
		small dispatchers
	update copyright date
	update {windows,data,overview}.txt
		dev web section
	compose multipart video
	new coverity defect

post release:
	c99 -> c11? (threading)
	POSIX:2008
	cull issues
	author repo / git mailmap

man pages (inc synonyms, deprecated)

config docs: unify (imap only)-style sections
	dedupe any deprecated/synonym refs

generate list of dialogs (all combinations)
	macros/config to navigate to each
	<write-screen>X<enter>
	sample emails / config
	draw graph
	pager: plain, email, attachment mode
		with / without index
		with / without sidebar
		with / without help
	index: normal, postpone, attach-email
		with / without sidebar
		with / without help

:color OBJ
	display one-line summary of colour in msgwin
	how? need special handler to display the colours
	temporarily take ownership?
	what about colours that take multiple regexes?
		resize msgwin?  how much?

alternative to ASAN?
	clang -ftrivial-auto-var-init=pattern -o jim jim.c

change to host list?
	mutt_error(_("Can't get mixmaster's type2.list"));

find/kill
	if (x) return (or continue or break)
	else if...
	if (.*\n\s\+{\n\s\+return\>.*\n\s\+}\n\s\+else

root
	weekly ctags
	/usr/include
	/usr/lib/gcc/x86_64-redhat-linux/13/include/
OR
	run ctags OF those dirs, elsewhere
	keep in ~/.cache

contrib:
	update rpm spec & bugzilla
	notify packagers
		ask them NOT to compress everything!

functionise `git d1`

from python/black:
	Authors
	The author list is quite long nowadays, so it lives in its own file.
	See AUTHORS.md

anything in wiki worth saving?

find all functions returning 0=success,-1=failure
	check they are tested with `if (x() == 0)` not `if (!x())`

italics
	https://apple.stackexchange.com/a/267261
	mac:
		Terminal.app good
		iTerm.app needs https://apple.stackexchange.com/a/267261

acutest implement ASSERT_EQ(left,right), ASSERT_NEQ(left,right)
	this would allow acutest to print both values when they differ
	(saving the user from doing so)
	update LOTS of our tests

check doxygen version in ubuntu-latest
	1.9.1
check if the debian-sid container is still needed

make lmdb, rocksdb, tdb default stores (modern)
	lmdb, rocksdb, tdb, tokyocabinet, kyotocabinet, bdb, gdbm, qdbm
	encourage packagers to choose at least one of the first three

docs: add "recently changed" section to front of guide!
	plus link to github releases page / changelog
	:changelog
changelog
	markdown files
	<details>
	<summary><h2>2024-02-01</h2></summary>

	* Features
	- #4134 Command-line Crypto (neomutt -C)
	* Bug Fixes
	- #4065 track new-mail check time per mailbox
	- #4141 fix(change-folder): don't exclude notmuch
	</details>

https://github.com/autozimu/LanguageClient-neovim
https://people.freebsd.org/~gahr/lc.vim

all style guide ideas -> discussion

convert all questions(issues) -> discussions
	1) find all question issues
	gh issue list --label type:question --state closed

list macros
	count their use
	eliminate any?
	or static inline functions
		82 MoreArgs
		52 SKIPWS
		48 mutt_socket_send
		29 state_putc

once we can test mutt_parse_rc_buffer()
	wrap a fuzzer around it!
	seeded with hundreds of valid set/unset lines

top tip
	:bind index p end-cond
	# make 'p' do nothing, silently, on the index

tests combine
	NeoMutt = test_neomutt_create();
	TEST_CHECK(NeoMutt != NULL);
	TEST_CHECK(cs_register_variables(NeoMutt->sub->cs, Vars, DT_NO_FLAGS));

config register
	ignore dupes?
	pop/imap share MessageCacheClean

for --devel-feature, add a section in the ./configure summary
that explains: this feature may change or be removed without warning
please give feedback
create discussion for each --devel option and link to it

:source supports relative paths, but :lua-source doesn't!
	when called from hooks

speed test a huge mbox mailbox vs 2022-04-29
	compare against mutt

web/dev document oss-fuzz steps for a local build/test

neo-bot: version command (only directly to bot)
	version number (need one)
	repo location

is all the code need to parse an email independent?
can it be:
	library-ised
	stressed tested?
	speed tested?
	fuzzed?

How many globals are doxygen doc'd?
	ffch ctags -x --c-kinds=v

understand its use and rename it to match
	@note The top-well-named MUTT_ICONV_HOOK_FROM acts on charset-hooks, not at all on iconv-hooks.

change function typedefs?
	function-pointer.org
	anyways, just don't do the pointer as part of the typedef, and it's much easier
	typedef void func_t(int, int);
	func_t *ptr = NULL;
	this reads _exactly_ like a function declaration, much easier to remember

sieve for github maintainers
	more sieves

add `test/neomutt-test -E` as a separate test
	fix two failing cases, if possible

test our more toolbox distros
	https://github.com/toolbx-images/images

split up multiple assignments
        grep " = [^,;]* = "
        grep " = [^,;]* [!=]= "

how to extract libmenu, so that it can be independently tested
        3 $configs:
                menu_context, menu_move_off, menu_scroll
        20 <functions>
                OP_BOTTOM_PAGE, OP_CURRENT_BOTTOM, OP_CURRENT_MIDDLE,
                OP_CURRENT_TOP, OP_FIRST_ENTRY, OP_HALF_DOWN, OP_HALF_UP,
                OP_LAST_ENTRY, OP_MIDDLE_PAGE, OP_NEXT_ENTRY, OP_NEXT_LINE,
                OP_NEXT_PAGE, OP_PREV_ENTRY, OP_PREV_LINE, OP_PREV_PAGE,
                OP_SEARCH, OP_SEARCH_NEXT, OP_SEARCH_OPPOSITE,
                OP_SEARCH_REVERSE, OP_TOP_PAGE
        lists: empty, 1, 2, <page, =page, >page, big, really big

mention corpus and dictionaries

BUILD
	PR template
	- All builds and tests are passing
	update to mention test files
	https://github.com/neomutt/neomutt-test-files

	update all templates

	test make install / uninstall?
		test for zero files afterwards

	add to build-and-test action
		if po/*.po have changed
		msgfmt --statistics -c -o /dev/null po/pl.po

	move mutt_X.[ch] into libX
		deps don't matter, it's a separate src file
		just mutt_history.*

	move hdrline to libindex?
		rename to 'index'?
		struct HdrFormatInfo

CLI
	neomutt -v output:
		add $LANG?
		multi-column output to reduce lines?

DOCS
	docs: "delimited" lists -> "separated"

FUNCTIONS
	split browser cases by function
		and other dialogs
		so all <functions> are independent functions()
		check against OpPager lists, etc
		dlg_select_attachment / mutt_attach_display_loop
			attach/recvattach.c:946:       9  mutt_attach_display_loop

	browser seems ok

	are ANY <functions> handled in the switch/case?

	rename OPs to match functions
		e.g. drop MAIN_
		{ "set-flag", OP_MAIN_SET_FLAG },

	dedupe function names: (check again for new dupes)
		add_cert
		add_folder
		append_message
		attach_config_observer
		attach_window_observer
		cmp_version_strings
		create_gpgme_context
		dump_menu
		format_line
		init_mailbox
		mutt_exit
		mutt_file_lock
		mutt_file_unlock
		mutt_resize_screen
		mutt_ssl_socket_setup
		mutt_ssl_starttls
		mutt_str_asprintf
		pgp_check_traditional_one_body
		tls_set_priority

	rename: buf, buflen
		look for others, how?
		* km_expand_key - Get the key string bound to a Keymap
		* @param s   Buffer for the key string
		* @param len Length of buffer

RENAME
	rename params
		size_t mutt_mb_mbstowcs(wchar_t **pwbuf, size_t *pwbuflen, size_t i, char *buf);

	'l' bad choice of param name
		First l chars of both strings are equal

	rename s/mutt_buffer_select_file/dlg_browser/
		factor out the 'dialog' part first

	change to **ptr, look for others
	free functions to take (**ptr)
	then deref to Type *t = *ptr;
	check ALL free pointers are safe on NULL -- document param as such

	SEND_NO_FREE_HEADER refers to an Email, SEND_NO_FREE_EMAIL?

	should be _free() -> need _new() too
		void mutt_bcache_close(struct BodyCache **bcache)

	variables, urgh! sendlib.c
		mutt_lookup_mime_type() int szf, sze, cur_sze;

TEST-TIDY
	test cases, delete contents of /tmp afterwards

	list all the test cases

subjectrx results should be stored in EmailView not Envelope
	char *subject;   ///< Email's subject
	char *real_subj; ///< Offset of the real subject
	char *disp_subj; ///< Display subject (modified copy of subject)

move mview.* into index/
	or libmview? encapsulate it?
		if so what's in index? what's in mview?

IRC user: I was just wondering why tag-pattern isn't available in the alias menu

:setenv
	don't leave neomutt to setenv query?
	translate tabs and escapes
		flags for the pager?
	any key to leave the pager (flag?)

coverage
	get 100% function coverage first?
	notmuch - reachable?
	enter/functions
	mutt/memory
	store/*

restore progress bar to imap
	caused repaint race condition
	removed in e3773a736

replace urlview (unmaintained) with urlscan (maintainer, more features)
	need to change /etc/neomuttrc
	need to update rpm .spec file

refactor: ?
	only used in two tests
	can it be used for anything else?
	#define SET_UP() (file_set_up(__func__))
	#define TEAR_DOWN(fp) (file_tear_down((fp), __func__))

ARRAY_FREE -> _CLEAR
	free(**ptr) free, null pointer
	clear(*ptr) empty
	cleanup()   tidy global resources
add to code docs
void buf_dealloc(struct Buffer *buf); -> _clear()

external pager - hitting 'j' doesn't advance to next email

triv: break up huge case: clauses
	measure all of them

elim mutt.org from code
	just one ref to urlview

refactor actions to use actions/checkout to *push*
	https://github.com/actions/checkout/#Push-a-commit-using-the-built-in-token
	.github/workflows/doxygen.yml
	.github/workflows/translate.yml

commands.c
	lots of buf->data -> buf_string(buf)
	buf->data[0] -> buf_at(buf, 0)
	look for others
	make buf_at() inline?

review all reallocs => memset to clear new memory
	email/attach.c has lots!
	mutt_realloc_zero(ptr, size, old_size)
	couple of places using bare realloc
	lazy_realloc() in hcache
		library-ify for Buffer too?

op_exit() doesn't
	mutt_startup_shutdown_hook(MUTT_SHUTDOWN_HOOK);
	mutt_debug(LL_NOTIFY, "NT_GLOBAL_SHUTDOWN\n");
like op_quit() does

try https://github.com/grobian/html2text

tidy live neomutt config
	dupe to ~mutt
create parallel mutt config
	dupe to ~mutt
start by flattening it into one file
then reorganise and resplit
move into .config/neomutt
fix git upstream for main repo

convert hcache to use Buffer as the store
	eliminate lazy_realloc

hcache: lazy_realloc() is only lazy to 4KiB
	then it reallocs for every tiny addition
	change increase to 4KiB blocks
	all 54000 test emails lead to hcache sizes < 4KiB

neomuttrc.vim
	neomuttlog.vim offer to vim ml

	update neomuttrc.vim
		colors with attributes

	vim neomutt, -noregex not recognised

	get vim css color working with neomutt config #rgb colour syntax

filter inbox into folders
	sieve future mail

config that isn't relative to parent config file
	$certificate_file
	$autocrypt_dir
	check all files/dirs?
	are *any* expanded when set?

strip down /home/github
	create backup script to ignore 3rd-party/
	dated, vivo-github.tar

discussions
	realloc_zero() - ARRAY upgrades
	address book upgrades (tags, limit, sidebar, colour)
	background edit - steps, arch how?
	buffer.buf_at() inline
	buffer opaque?
	buf_len() vs buf_strlen()?
	offer up some code-scanning issues for fixing

eliminate some CodeQL warnings/errors
	https://github.com/neomutt/neomutt/security/code-scanning
	dev analysis page with download instructions

try to find homes for the contents of protos.h
	or merge it with something else

analyse all /*.h used in */*.[ch]
	e.g. format_t to core/ ?
		(used by many libraries)

move *.rc to ~/.mutt/
move *.mbox to ~/mail/

:help [TOPIC]
	e.g. to_chars
	auto-complete on TOPICs
	what would be the source?
	would it be translated?

graphviz doc to dev/analysis
What about?
	--fuzzing           Enable Fuzz Testing
add _dev analysis fuzzing page

copy asan configure/bash scripts to dev page

some actions missing from https://neomutt.org/dev/actions
	~/work/site-actions/
	macOS

make sure all notifys doxy their data
struct Notify *notify;    ///< Notifications: #NotifyIndex, #IndexSharedData

add with/without build tests for autocrypt
	needs vm without libraries installed

add links in web/dev to gfx repo for arch diagrams etc
	and/or dev list

update web dev translate deployment
	add coverity

link observer function docs to Event/EventStruct they receive

doc egypt workflow
	CFLAGS -> svg
	make flatcap branch the main?  or merge?

add logging info to ubsan page
	https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#logging

kill the num_accounts and return the value
int mutt_autocrypt_db_account_get_all(struct AutocryptAccount ***accounts, int *num_accounts)

not closed on exit
        static FILE *fp_random;

menu globals, not freed on exit?
        can't find where it's freed
        char *SearchBuffers[MENU_MAX];

triv: dump keymaps #ifdef? --debug-keymaps

asan instructions -- add EXTRA_CFLAGS='-ggdb3 -O0' to ensure debugging info
	seems not to matter, only stripping the binary affects the output

MARKER Buffer.data
	count dereferences outside of mutt/buffer.[ch]
		main test
		449   30 Buffer.data
		158    0 Buffer.dptr
		 75    5 Buffer.dsize
		 62    0 Buffer.data, Buffer.dsize
	aim to replace with buf_at()
	need to inline buf_at() first
	ASSERT() range checks?
	make the Buffer opaque?
	distinguish between buf_len() and buf_strlen()

colour schemes
	need background = light|dark
	theme-name-light.rc
	theme-name-dark.rc
	could link objects together, like vim
		color sidebar_indicator link indicator

https://github.com/MaJerle/c-code-style
https://github.com/mcinglis/c-style

help
	use expandos to generate the help page
		ideally needs dynamic widths to use space as needed
	but dump the output to a file, then pager as normal

no space before \$
	ag -u '[^ \t]\\$'

nf - no fail versions of functions
	c/o @ossilator Oswald Buddenhagen
	https://sourceforge.net/p/isync/isync/ci/master/tree/src/util.c#l609

BUG: doesn't cause a repaint of the index
	set narrow_tree = no

window_redraw()
	after window_repaint(win)
	call window_repaint(focus)
	allowing window to position the cursor and make it visible
	windows that allow focus need to check for (win->actions & WA_REPAINT)
	to prevent duplicate repainting

these need to be paired exactly, making them error prone
	notify_observer_add()
	notify_observer_remove()

ifdef color-name ...?

messages that might benefit from \n
plus the keymap.c http:// error
	%d message has been lost. Try reopening the mailbox.
	%d messages have been lost. Try reopening the mailbox.
	%s does not exist. Create it?
	Attachment #%d modified. Update encoding for %s?
	Can't decode all tagged attachments.  MIME-encapsulate the others?
	Can't decode all tagged attachments.  MIME-forward the others?
	Can't postpone.  $postponed is unset
	Can't sign: No key specified. Use Sign As.
	Connected to %s. %s
	Connection lost. Reconnect to POP server?
	Connection to %s lost. Reconnect?
	Error encrypting message. Check your crypt settings.
	Error saving flags. Close anyway?
	Error. Preserving temporary file: %s
	failed to find message in notmuch database. try running 'notmuch new'.
	Fcc failed. (r)etry, alternate (m)ailbox, or (s)kip?
	ID has undefined validity. Do you really want to use the key?
	ID is expired/disabled/revoked. Do you really want to use the key?
	ID is not trusted. Do you really want to use the key?
	ID is not valid. Do you really want to use the key?
	ID is only marginally valid. Do you really want to use the key?
	Inline PGP can't be used with attachments.  Revert to PGP/MIME?
	Inline PGP can't be used with format=flowed.  Revert to PGP/MIME?
	Internal error.  Please submit a bug report.
	Key is not bound.  Press '%s' for help.
	Mailbox is marked unwritable. %s
	Mailbox was externally modified.  Flags may be wrong.
	Message can't be sent inline.  Revert to using PGP/MIME?
	Message contains text matching \$abort_noattach_regex\. Not sending.
	Message of read-only mailbox modified! Ignoring changes.
	MIME type not defined.  Can't view attachment.
	nm_default_url must be: notmuch://<absolute path> . Current: %s
	No crypto backend configured.  Disabling message security setting.
	No matching mailcap entry found.  Viewing as text.
	No Message-Id. Unable to perform operation.
	PGP already selected. Clear and continue?
	Posting to this group not allowed, may be moderated. Continue?
	QRESYNC failed.  Reopening mailbox.
	S/MIME already selected. Clear and continue?
	The message index is incorrect. Try reopening the mailbox.
	This IMAP server is ancient. NeoMutt does not work with it.
	Warning: This alias name may not work.  Fix it?

guug: neomutt, a TUI email client that lets you zip through emails
mbiscuit: I like the emphasis on speed.

guug_ | flatcap: Another tagline (a bit hippy)-- neomutt: 60 to 0 in 2.3 seconds.

mouse
	guug: So yeah but in the "mouse support thing", my one wish would be some frequently accessible things also accessible by mouse thus opening neomutt to non-power users.
	guug: e.g. the limit thing could be a tiny box [fi(l)ter: ] where user could click to see this expand.

tutorial
	mbiscuit | what you need is some young person with nimble fingers and all the keyboard shortcuts in their head doing a 'this is how fast mailing can be' tutorial
probably need two runs, one at speed, then one slow with explanations and a list of shortcuts/macros used

discussions
	(re-)label *all* of them
	group into help-wanted, in-progress, crazy-ideas?
		or sub-categories/sections
	move all ideas in issues into discussions

pin a "help wanted" issue linking to discussions
	clear out, or transfer, all issues wanting help

log_disp_debug -- dump everything?
	MuttLogger = log_disp_terminal;

check sort options are separated by ',' (comma) to allow splitting
	msgid "Sort (d)ate,(f)rm,(r)ecv,(s)ubj,t(o),(t)hread,(u)nsort,si(z)e,s(c)ore,s(p)am,(l)abel?"
	msgstr "Tri (d)ate/(a)uteur/(r)eçu/(o)bjet/de(s)t/d(i)scus/aucu(n)/(t)aille/s(c)ore/s(p)am/(l)abel?"
after msgwin improvements, change to ', ' (comma space)
or allow splitting on comma-alnum or comma-bracket
check for other compact strings
long strings (81+)
	msgid "Reverse sort by (d)ate, (a)lpha, si(z)e, d(e)scription, (c)ount, ne(w) count, or do(n)'t sort?"
	msgid "Sort by (d)ate, (a)lpha, si(z)e, d(e)scription, (c)ount, ne(w) count, or do(n)'t sort?"
	msgid "Rev-Sort (d)ate,(f)rm,(r)ecv,(s)ubj,t(o),(t)hread,(u)nsort,si(z)e,s(c)ore,s(p)am,(l)abel?"
	msgid "Sort (d)ate,(f)rm,(r)ecv,(s)ubj,t(o),(t)hread,(u)nsort,si(z)e,s(c)ore,s(p)am,(l)abel?"
	msgid "WARNING: We have NO indication whether the key belongs to the person named as shown above\n"
	msgid "WARNING: It is NOT certain that the key belongs to the person named as shown above\n"
	msgid "S/MIME (e)ncrypt, (s)ign, encrypt (w)ith, sign (a)s, (b)oth, (c)lear, or (o)ppenc mode?"
	msgid "Invalid nm_query_window_timebase value (valid values are: hour, day, week, month, year)"
	msgid "messages whose Message-ID is included in the results returned from an external search program"

log this?
	void mutt_beep(bool force)

index/functions.c is the (!shared->mailbox_view) check redundant?
	check if neomutt crashes without it
	run it through coverity
	if (!shared->mailbox_view || ((check = mx_mbox_close(shared->mailbox)) == MX_STATUS_OK))

like `color options`, have a colour for default/alternate answers? [yes]/no
	make default brighter
	make alternate dimmer
	or use existing 'options' colour
		replacing [xxx]
apart from mw_yesorno() which other questions are there?

discussion - message strings
	define meaning of 'error' and 'warning'
	demote error -> warning where possible
	demote error/warning to message where possible
counts: (868)
	601 mutt_error()   395 uniq
	 27 mutt_warning()  25 uniq
	240 mutt_message() 154 uniq
possible easy task
	31 * "warning:"
	98 * "error:"
make sure they
	mutt_warning()
	mutt_error()
drop prefix from message and translations
create standard, translated, prefix for all warnings/errors
	prefix isn't displayed if `color error` / `color warning` is set
reword where necessary
	"Error opening 'memory stream'"
	"Error: " + "Can't open 'memory stream'"

discussion
	medium diff - anti-phishing
	check for non-ascii domains and show punycode
	work/phishing.mbox
where?
	index
		add to existing field?
		separate field / expando?
		warning expando / flag
	pager
	compose
	address book?

folder_make_entry() does config lookups every time
	can this be factored out?
	check other format strings

rename `struct ConfigSubset *sub` -> `*cfg`?
	there are zero variables call cfg!
	but it *is* a *sub*set

DT_ON_STARTUP
	can't be changed after startup completes
	i.e. must be in config file or cli: `-e set...`
make note in docs

Investigation: eliminate pseudo globals
	bool OptAttachMsg;           ///< (pseudo) used by attach-message
	bool OptAutocryptGpgme;      ///< (pseudo) use Autocrypt context inside ncrypt/crypt_gpgme.c
	bool OptDontHandlePgpKeys;   ///< (pseudo) used to extract PGP keys
	bool OptForceRefresh;        ///< (pseudo) refresh even during macros
	bool OptKeepQuiet;           ///< (pseudo) shut up the message and refresh functions while we are executing an external program
	bool OptMsgErr;              ///< (pseudo) used by mutt_error/mutt_message
	bool OptNeedRescore;         ///< (pseudo) set when the 'score' command is used
	bool OptNeedResort;          ///< (pseudo) used to force a re-sort
	bool OptNews;                ///< (pseudo) used to change reader mode
	bool OptNewsSend;            ///< (pseudo) used to change behavior when posting
	bool OptNoCurses;            ///< (pseudo) when sending in batch mode
	bool OptPgpCheckTrust;       ///< (pseudo) used by dlg_select_pgp_key()
	bool OptRedrawTree;          ///< (pseudo) redraw the thread tree
	bool OptResortInit;          ///< (pseudo) used to force the next resort to be from scratch
	bool OptSearchInvalid;       ///< (pseudo) used to invalidate the search pattern
	bool OptSearchReverse;       ///< (pseudo) used by ci_search_command
	bool OptSortSubthreads;      ///< (pseudo) used when $sort_aux changes

don't seem to work .git/files/g3-overview1.gv
	unbind index *
	unmacro index *

overlay search matches in the index
	*if* the search field is even visible
	if I type `/john` in the index, that'll use $simple_search` -> `~f %s | ~s %s`
	search is telling the menu where to move the indicator, but not _why_
	the search is done lazily; it stops on the first match
	if it didn't, we could at least highlight the *lines* matched
	(and limit it to the visible window for efficiency)

status bar, new expandos? for
	search pattern
	number of matches (4/22)
		helps to notice wrap-around

Is Menu.search necessary now that we have ordered function dispatchers?
	compare browser vs alias

eliminate 59 static vars in functions?
	$ ag "^  static " | wc -l
	79
	$ ag "^  static const " | wc -l
	20
	postpone/postpone.c:74:1:        static time_t LastModify = 0;
	postpone/postpone.c:75:1:        static char *OldPostponed = NULL;

what does iwyu.sh *need* from compile_commands.json?
	just "main.c"
	is the $PWD path needed?
	can I strip it down to 1 line?
	put it in .cache/mutt
	doc the contents of .cache/mutt
		source, how to build, etc

wdata_free = wdata_free_generic()
	a function of the right prototype that just does free()
	∀ *_free API fns?
	or if (wdata && !wdata_free) -> assume free() NO
	if wdata, wdata_free must exist, both or neither

$timeout, $mail_check, $mail_check_stats_interval
	DT_NOT_NEGATIVE already
	is 0 allowed?
		yes by config
		is it meaningful by use?
			is disabling this timer meaningful?
		DT_NOT_ZERO?

update all docs that reference time, timeouts, etc

upstream config
	"compose_confirm_detach_first", DT_BOOL, R_NONE, {.l=OPTCOMPOSECONFIRMDETACH}, {.l=1} },
	When \fIset\fP, Mutt will prompt for confirmation when trying to
	use \fC<detach-file>\fP on the first entry in the compose menu.
	This is to help prevent irreversible loss of the typed message by
	accidentally hitting 'D' in the menu.
	Note: Mutt only prompts for the first entry.  It doesn't keep
	track of which message is the typed message if the entries are
	reordered, or if the first entry was already deleted.

iwyu branch
	cron
	artifacts for results
	separate build section for displaying results
		one that fails
	need sed scripts to filter output
	or csplit to break it up

find "release checks" branch
	check include guards
	check @page exists in lib.h
	etc

check logging on hooks is consistent

Find files missing trailing newlines in a git repo:
	git ls-files -z | grep -vz "png" | xargs -0 -L1 bash -c 'test "$(tail -c 1 "$0")" && echo "$0"'

update test-library

do we want to / how do we remove the state info from libmutt
the `static const`s are probably fine
some of the plain `static` might be too
	mutt/charset.c:58:               wchar_t                ReplacementChar             = '?';
	mutt/charset.c:63:               bool                   CharsetIsUtf8               = false;
	mutt/charset.c:80:  static       struct LookupList      Lookups                     = TAILQ_HEAD_INITIALIZER(Lookups);
	mutt/charset.c:95:  static       struct IconvCacheEntry IconvCache[ICONV_CACHE_SIZE];
	mutt/charset.c:97:  static       int                    IconvCacheUsed              = 0;
	mutt/logging.c:52:               log_dispatcher_t       MuttLogger                  = log_disp_terminal;
	mutt/logging.c:54:  static       FILE *                 LogFileFP                   = NULL;
	mutt/logging.c:55:  static       char *                 LogFileName                 = NULL;
	mutt/logging.c:56:  static       int                    LogFileLevel                = 0;
	mutt/logging.c:57:  static       char *                 LogFileVersion              = NULL;
	mutt/logging.c:62:  static       struct LogLineList     LogQueue                    = STAILQ_HEAD_INITIALIZER(LogQueue);
	mutt/logging.c:64:  static       int                    LogQueueCount               = 0;
	mutt/logging.c:65:  static       int                    LogQueueMax                 = 0;
	mutt/mbyte.c:43:                 bool                   OptLocales;
	mutt/pool.c:37:     static       size_t                 BufferPoolCount             = 0;
	mutt/pool.c:39:     static       size_t                 BufferPoolLen               = 0;
	mutt/pool.c:45:     static       struct Buffer **       BufferPool                  = NULL;
	mutt/qsort_r.c:37:  static       sort_t                 GlobalCompar                = NULL;
	mutt/qsort_r.c:39:  static       void *                 GlobalData                  = NULL;
	mutt/random.c:44:   static       FILE *                 FpRandom                    = NULL;
	mutt/signal.c:39:   static       sigset_t               Sigset;
	mutt/signal.c:41:   static       sigset_t               SigsetSys;
	mutt/signal.c:44:   static       struct sigaction       SysOldInt;
	mutt/signal.c:46:   static       struct sigaction       SysOldQuit;
	mutt/signal.c:50:   static       bool                   SignalsBlocked;
	mutt/signal.c:54:   static       bool                   SysSignalsBlocked;
	mutt/signal.c:57:   static       sig_handler_t          SigHandler                  = mutt_sig_empty_handler;
	mutt/signal.c:59:   static       sig_handler_t          ExitHandler                 = mutt_sig_exit_handler;
	mutt/signal.c:61:   static       sig_handler_t          SegvHandler                 = mutt_sig_exit_handler;
.
	mutt/base64.c:62:          const int                    Index64[128]                = {
	mutt/file.c:61:            const char                   FilenameSafeChars[]         = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+@{}._-:%/";
.
	mutt/base64.c:45:   static const char                   B64Chars[64]                = {
	mutt/buffer.c:46:   static const int                    BufferStepSize              = 128;
	mutt/charset.c:118: static const struct MimeNames       PreferredMimeNames[]        = {
	mutt/date.c:50:     static const char *const            Weekdays[]                  = {
	mutt/date.c:57:     static const char *const            Months[]                    = {
	mutt/date.c:67:     static const struct Tz              TimeZones[]                 = {
	mutt/file.c:58:     static const char                   RxSpecialChars[]            = "^.[$()|*+?{\\";
	mutt/logging.c:45:  static const char *                 LevelAbbr                   = "PEWM12345N";
	mutt/md5.c:46:      static const unsigned char          fillbuf[64]                 = { 0x80, 0 };
	mutt/notify.c:41:   static const char *                 NotifyTypeNames[]           = {
	mutt/pool.c:41:     static const size_t                 BufferPoolIncrement         = 20;
	mutt/pool.c:43:     static const size_t                 BufferPoolInitialBufferSize = 1024;
	mutt/random.c:47:   static const unsigned char          Base32[]                    = "abcdefghijklmnopqrstuvwxyz234567";
	mutt/string.c:113:  static const struct SysExits        SysExits[]                  = {

RSI prevention, NeoMutt style:
	# Alt-j inserts =
	macro editor \ej =
post to users ml

doesn't seem to work
	shutdown-hook "date > jim"

rename mw_ source files like dlg_*.c?

ren progress bar to mw_progress_bar?

split up functions
the opcodes can't be split -- too much overlap
might need to wait for the key code to be reworked
	gcc -I. -E -C functions.c | sed -n '/map: /,/^$/p'
		test on bsd, macos

$status_format -- %b Number of mailboxes with new mail
	can cause mailbox check
	const int num = mutt_mailbox_check(m, MUTT_MAILBOX_CHECK_NO_FLAGS);
	https://github.com/neomutt/neomutt/blob/main/status.c#L118
	that's probably unnecessary

disable $check_new just in the pager?
	i.e. quiet "New Mail in X" messages

test io_uring.c
	figure out path to integration

all proto-discussions to ~/work/discussion/
	make into a git repo

find longest messages, consider multilining
	plus change po/

old notebook: type up or rip up

Post Release
	https://github.com/neomutt/neomutt/discussions/3322
	clang-format options
	cull old issues
	Increase the Build Minimum Versions

doxy: next big area for coverage?
	members 76%
	defines 40%
	check stats
	100% structs.svg (247)
		247 struct
		40 ARRAY_HEAD SLIST_HEAD STAILQ_HEAD TAILQ_HEAD
	100% pages.svg
	100% globals.svg
	100% functions.svg
	100% enums.svg
	76%  members.svg
	40%  defines.svg

coverage fix stats
	use lcov --exclude
	to ignore all the files we never intended to include
	push to coveralls

check fedora install instructions

top-level (feature) docs for
	colours
	caching - recommend LMDB

dyk
	alberand | Hey all! Does anyone know if there is an easy way to change received emails? What I want to do is - I get a lot Jira emails and they contains
	         | a bunch of useless info, I want to add bash script on those emails to cut this off
	 flatcap | yes, you could use $display_filter
	 flatcap | :set display_filter="sed '/^On/,/^$/d'"
	 flatcap | that'd kill everything between a line beginning "On" and the first blank line after it
	 flatcap | you could use a couple of `folder-hook`s to make it only apply on certain folders

coredumpctl debug neomutt

kill https://neomutt.org/dev/build/autosetup

info pager, <save-message>
	mutt_sig_allow_interrupt(true);add "overwrite?" check

after attaching a file, remember the directory in case of attaching another

gh pr list --search "closed:>2023-12-21"

info pages (:set, etc) could do with colour
	but it shouldn't be saved to file
		flag to colour
		flag to save colour
	can't tell if we have a light/dark background
	set background = {light|dark} ?
	need colours like vim
		keyword, comment, string
	and colours for the log messages

color link command to share colours
	Need `enum ColorId link;` in AttrColor
	if linked, then changing one colour could affect many others
	would need to change the notification to pass an array
	'theme' command would only send one notification: ALL

dyk / howto re-send automatic emails / template
	see irc discussion on 2023-11-03

colour: fix escaping, fix "normal"
	should use 'single' quotes for simplicity of escaping
orig config
	color body      brightyellow default  '\<_\S+_\>'
	color body      brightyellow default  '\*\<\S+\>\*'
	color body      brightyellow default  '/\<\S+\>/'
representation in :color
	color body bold brightyellow default  "\\<_\\S+_\\>"
	color body bold brightyellow default  "\\*\\<\\S+\\>\\*"
	color body bold brightyellow default  "/\\<\\S+\\>/"

for each db type, create and populate a database
	then try to open each database with all the wrong backends
	check that they all fail
	_NEO_DATA hcache?

option to save a <vfolder-from-query>
	see irc discussion on 2023-11-03

stackoverflow
	In mutt one copies an email to a mailbox with copy-message, bound to C by default.
	This will ask you for a mailbox to copy it to.
	Is there a way to copy it directly to the mailbox currently highlighted in the sidebar?
we could add mailbox shortcut '$', but how would the code work
index knows about emails, but doesn't know about the sidebar
sidebar knows about the highlight, but doesn't know about emails
perhaps the sidebar could register a shortcut symbol, with a callback function
	see irc discussion on 2023-11-03, 2023-11-04
where does folder expansion happen?
	where does '<' become $record?
	buf_expand_path_regex()
	https://neomutt.org/guide/advancedusage.html#shortcuts

progress different colours for read/write/network?
	merge with base "progress" colour

's' <save-message> option to strip out ANSI colours
	update :version to dump colours

discussion: mailmerge howto
	see irc haxtibal 2023-11-05

c99 -> c11?

sidebar - when did labels start getting indented?

sidebar tree generator
mxapi.account.get_path_separators()
	mailbox level
	or account level
mxapi.account.get_all_mailboxes()
	get a list of all (subscribed or not)
sidebar_fill_in_the_blanks
	create fake entries to create a coherent tree
sidebar_generate_tree -fill-gaps ~/mail  or  imap://host.com/
	=> limited number of sorting methods
	what happens with hidden mailboxes?

w0lff:
	I don't know all configuration options for the sidebar but I think the sidebar could have a fresher-upper.
	Like support for the empty/NoSelect folders (with an own color-group for "this is a non-selectable/non-mbox folder", thunderbird displays these
	folders in a darker grey);
	custom hierarchical entries with configurable indent;
	colorization by character spans e.g. highlight the number of unread mails different from the name of the folder;
	or even more advanced multiple custom sidebars, useful for multiple account setups or to give a reduced select view of only a subset of mailboxes.

struct Path needs: bool is_local

DT_NOT_EMPTY -- not implemented in all config types
	doesn't make sense for numeric types
	should be there for strings / object types

refactor progress_new()
	new takes type, size
	progress_set_message(format, ...)
	printf-style
	saves on having temporary buffer in many of the callers
	can be called to change the message
	new(type) only
	progress_set_size(1234)?

actions:
	I haven't seen "working-directory" in the actions before.
	I should probably retro-fit that into some of the other actions

https://best.openssf.org/Compiler-Hardening-Guides/Compiler-Options-Hardening-Guide-for-C-and-C++.html

compose enhancement
	   gzbd | I would like to see the the to,cc,subject etc in the same view along with text/plain attachments.
	flatcap | oh, see what the email _would_ look like?
	flatcap | no, that's not possible (yet! :-)
	   gzbd | IMO this would be a nice visual improvement, since the space is there
	flatcap | yeah, it's a reasonable idea
	      * | flatcap thinks how graphical email programs tend to work
	flatcap | adding a pager in the space at the bottom wouldn't be too hard...
	flatcap | but making the whole screen a view (meaning that <page-down> would scroll the envelope part off the top), would be trickier
change attachment bar to show the number of attachments
insert pager window below attachment menu
	only if there's >5 lines, say
		e.g. huge list of attachments
	OR, limit attachment list to 5 or 10 lines, like $pager_index_lines
		use rest for the pager
	<up>/<down> control attachment selection
	<page-up>/<page-down> control the pager
pager window displays *pager* view, not mailcap/text view
	option to control this?
	OR pager for first attach (main message)
	and mailcap for the rest

add tag-pattern to the browser -- useful for compose-attach
	if multi-selection is allowed

document and asciinema alias tags:

Fedora, ask for karma

kill
	create ~/Mail on startup
	/var/spool/mail doesn't exist
		or message: "set spool_file" to pick initial mailbox

bug?: 'color body' overrides 'color quotedX`!
	rbmarliere | ha, weird. setting color body color232 default makes all quotedX colors to be ignored hehe
	   flatcap | same in mutt
	   flatcap | I suppose it makes sense...
	   flatcap | the 'body' colouring rules have a higher priority than the 'quotedX' colours
	   flatcap | though... the quotedX background colours should show through the body's default background

create clang-format action using fedora docker
	cron
	fail if any diffs
	diffs -> artifact
	diffs -> branch [clang-format] (force?)
		no, push to branch it's working on
		except [main] -> [clang-format] or [main-clang-format]?
		commit "clang-format [auto]"
	work out how to clang-format the "#include" *block* of header files

create f39/rawhide docker for clang-format
create devel/* action to run it
	base for a general linter
	∀ .github/linter/*.sh
	No 'for' loop, separate steps so CI is clearer

coverage:
	increase email/tags
add hcache to tests
	and maildir
	which other libraries are _testable_?
	(i.e. don't require gui parts)
	already tested
		address color compress config core editor email imap mutt notmuch parse pattern store
	untested
		alias attach autocrypt bcache browser complete compmbox compose
		conn convert envelope gui hcache helpbar history index key
		maildir mbox menu mh mixmaster ncrypt nntp pager pop postpone
		progress question send sidebar

main - non-gui
	investigate / kill the need for:
	/* Always create the mutt_windows because batch mode has some shared code paths that end up referencing them. */
	bool NeoMutt.gui = true (or .tty = true?)
	need tests around all shared gui code
	every window/dialog create could fail
		every caller should check
	every question to the user could return immediately
		mw_yesorno() could return default
		query_yesorno() could return default, or use a non-gui form
	check for any uses of RootWindow, e.g. for width formatting
		wrapper for this use, fallback to $COLUMNS
		hide RootWindow
	need list of all cli modes
		everything possible from the command line

merge
	#3890 - add mutt_mem_realloc_zero()
		need at least one user, first
		has tests?
	#4023 - fix observer event types

tv
	EBNF for all 87 commands?
	*read* folder_format issue https://github.com/neomutt/neomutt/issues/4170

lua / lua-source aren't documented ANYWHERE
	need feature page with examples

`:echo $INTERNAL_VAR` doesn't expand
	if you `setenv INTERNAL_VAR value` in NeoMutt
	external vars work, config and my_var do too
	which version do we use?
	system getenv() or neomutt's EnvList
	what about magic vars COLUMNS, LINES?

coverage core (simple)
	command
	config_cache
	neomutt
	much of mailbox

#mutt user asks:
	how do I know which key I'm encrypting to in compose
	if there are multiple?
	hmm... hasn't been decided yet
	(key selection dialog comes after <send>)
	move it before?
		might mess up people's workflow
	but we could display the key/fingerprint/name
	what about multiple keys?
		list them all? probably

rename *_buffer_*() functions to buf, or strip buffer entirely
	mutt_b64_buffer_decode (3)
		mutt_b64_decode (5)
	mutt_b64_buffer_encode (4)
		mutt_b64_encode (8)
	test_mutt_b64_buffer_decode
	test_mutt_b64_buffer_encode
	mutt_socket_buffer_readln (2)
		mutt_socket_readln (19)
	mutt_socket_buffer_readln_d (1)
		mutt_socket_readln_d (12)
find all functions with a Buffer parameter

progress bar
	if message is very long (wider than the screen) it wraps
	but... the progress bar itself is only one row high
	leaving junk above it

test: create code to display every dialog
	how?  some require files!

vim-tabitha
	skip windows if
		b:tabitha_skip = 1
		window is zero width
		quickfix window (option?)

buffer version of
	mutt_str_pretty_size()
	add_indent()

void mutt_str_pretty_size(char *buf, size_t buflen, size_t num)
	externalise all the config
	used in index_format

badly named
	#define TYPE(body)

replace
	get_sort_str() with cs_subset_str_string_get()

message_bar() doesn't need mutt_simple_format()
	it already has the screen width
	it just needs to pad using spaces

need to test message_bar() when msg contains 2-cell characters
	(progress bar)

move to email/body? (and rename)
	struct Body *mutt_make_multipart(struct Body *b)
	struct Body *mutt_remove_multipart(struct Body *b)
	create email/multipart.c ?

be explicit?
	win->wdata_free = NULL; // No need, we hold the data
or dynamically alloc them, and prevent lots of github security warnings
	win->wdata_free = NULL; // No need, we hold the data
	autocrypt/dlg_autocrypt.c:326:6: dlg->wdata = &ad;
	browser/dlg_browser.c:1368:6:    dlg->wdata = priv;
	enter/window.c:263:8:            win->wdata = &wdata;
	gui/simple.c:140:6:              dlg->wdata = win_menu->wdata;
	history/dlg_history.c:147:6:     dlg->wdata = &hd;
	mixmaster/dlg_mixmaster.c:149:6: dlg->wdata = priv;
	ncrypt/dlg_gpgme.c:751:6:        dlg->wdata = &gd;
	ncrypt/dlg_pgp.c:669:6:          dlg->wdata = &pd;
	ncrypt/dlg_smime.c:224:6:        dlg->wdata = &sd;
	pager/pager.c:420:6:             win->wdata = priv;
	pattern/dlg_pattern.c:344:6:     dlg->wdata = &pd;
	postpone/dlg_postpone.c:215:6:   dlg->wdata = &pd;

msgwin doesn't observe colour changes
	color normal red blue
	needs ctrl-l

find potential places for struct Buffer
	691	ag "([a-z_]+(->[a-z_]+)*), sizeof\(\1\)"
	37	ag "([a-z_]+(->[a-z_]+)*)-\>data, \1-\>dsize"

refactor "not reached"
	8	ag "not reached"

bad C functions
	https://github.com/git/git/blob/master/banned.h

assert upgrade
	change to macro that calls:
	- endwin()
	- dump_backtrace()
	- (real) assert()
	https://nullprogram.com/blog/2022/06/26/
	#define assert(c) if (!(c)) __builtin_trap()
	#define ASSERT(COND) do { if (!COND) { endwin(); show_backtrace(); __builtin_trap(); } } while (false);

compare mutt/neomutt config
	synonyms and deprecated
	create new synonyms for unnec mutt config

publish code-scanning repo
	neomutt private repo

Stats: 2024-03-28
	 Mutt	NeoMutt
	96576	 127864	lines of code
	 2415	   4097	functions
	  215	    748	files
	  449	    171	loc per file
	   39	     31	loc per function

OP_ATTACHMENT_PIPE isn't referenced
	not in mutt
	pipe-entry works

kill mutt_str_cat() in favour of Buffer
	22 uses + 16 in tests/
	and mutt_strn_cat()
Buffer-ise
	url_tostring()

fix hcache vs bcache dir discrepancy
	bcache imaps:flatcap-mail@flatcap.org
	hcache imaps_flatcap-mail_flatcap.org
only mutt_encode_path() the *path* bit
	assume home dir and config are already valid
check upstream's docs/behaviour for cache config with/without trailing '/'
do we consistently mkdir on both?

