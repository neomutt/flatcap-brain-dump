simplify cppcheck example
	cppcheck --enable=all --language=c --std=c99 -i autosetup --platform=unspecified -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048 -I/usr/include -I/usr/include/mit-krb5 -I. --output-file=cppcheck.xml --xml --xml-version=2 <path to neomutt source code directory>
	cppcheck --enable=all --language=c --std=c99 -i autosetup -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048  -I. --output-file=c1  .
use --check-config to list missing header files
	cppcheck --verbose --check-config --enable=all --language=c --std=c99 -i autosetup -i test -DPATH_MAX=2048 -D__x86_64__ -I. -I/usr/include -I/usr/lib/gcc/x86_64-redhat-linux/8/include -I/usr/include/qdbm --output-file=c1 .
	ignore doc dir too

fix !USE_NNTP build
	check !USE_SIDEBAR build

add printf format checkers to mutt_message, mutt_debug, etc

test int against 0
	what about ALL int members?

demote to warnings
mutt_error(_("Warning: XXX"));

if (!(a && b))
if (!(a || b))
ag 'if \(!\(.*(&&|\|\|).*\)\)'

ag '\(!\((.*) && (.*)\)\)'
ag '\(!\((.*) \|\| (.*)\)\)'

eliminate enum AccountType?
use enum MailboxType
	what about smtp?
	add entry?

conditional constants - reduce to a comment
	Hmm... non-functional enum entries might cause problems
	MENU_KEY_SELECT_PGP
	MENU_MIX
	MT_COLOR_DIVIDER
	MUTT_PAT_NEWSGROUPS
	MUTT_OPEN_HOOK
	REDRAW_SIDEBAR

body_copy() : move foreach param -> param_dup()

check all src against vim folding

pager
	replace CHECK_* macros with function
	bool pre_requisite(flag|flag, quiet);
	if (!pre_requisite())
		break
	need interface for index/pager operations?
	what are possible outcomes?
	break (continue loop)
	exit (function)
	fallthrough? NO refactor to avoid

replace "for (int" -> size_t in libmutt
	177 occurrences

browser.c has a lot of
	struct Email *tmp;
	tmp's a bad name for a variable
	scratch is too

move all
	if (!param)
	to start of function
	return early
	ag "^ +if \(.*\n +return"
	2540 functions
	start with libmutt?

decrypt_part - Explain r_is_signed better
	returns -1, 0, 1, 2

are these identical? YES
	static char crypt_flags(KeyFlags flags)
	static char pgp_flags(KeyFlags flags)

Convert to enum?
	struct ConnAccount.type
		unsigned char type;     ///< Connection type, e.g. #MUTT_ACCT_TYPE_IMAP

config system
	can it return warnings?
	yes, but it doesn't

init.c
	getsid() is POSIX2001
	no need for #ifdef?
	exists in cygwin

deglobalise
	EnvList in mutt/envlist.c
	c_hidden_tags in driver_tags_add()

string fn to pretty print \t, \r, \n for tests
	handle NULL, quote string

wrong name, should be _free()
	void mutt_addrlist_clear(struct AddressList *al)
	...
	mutt_addr_free(&a);
	hmm... but it doesn't free the actual AddressList

This doesn't seem to be documented in neomutt's manual either
I wonder if we could kill this unexpected behaviour
  /* This is an undocumented feature of ELM pointed out to me by Felix von
   * Leitner <leitner@prz.fu-berlin.de> */
  if (mutt_str_strcmp(mutt_b2s(buf), ".") == 0)
    mutt_buffer_strcpy(buf, LastSaveFolder);
  else
    mutt_str_strfcpy(LastSaveFolder, mutt_b2s(buf), sizeof(LastSaveFolder));

flags typedef?
	/* force flags passed to mutt_mailbox_check() */
	#define MUTT_MAILBOX_CHECK_FORCE       (1 << 0)
	#define MUTT_MAILBOX_CHECK_FORCE_STATS (1 << 1)

flagify
	#define MUTT_UNBIND  1<<0
	#define MUTT_UNMACRO 1<<1

eliminate complicated macros (multiline, conditionals, many callers)
refactor complicated or oft-used macros
	email/mime.h:85:1:   ENCODING         7
	email/mime.h:77:1:   is_multipart     8
	mutt/buffer.h:43:1:  MoreArgs         78
	mutt/regex3.h:52:1:  REG_COMP         18
	mutt/string2.h:47:1: SKIPWS           51
	state.h:56:1:        state_putc       30
	state.h:55:1:        state_puts       98
	mutt/string2.h:60:1: terminate_buffer 9
	mutt/string2.h:51:1: terminate_string 5
	email/mime.h:83:1:   TYPE             35

main.c
	text outside of else, search for others (over 60 comments before else)
	/* If editing the infile, keep it around afterwards so
	 * it doesn't get unlinked, and we can rebuild the draft_file */
	else

neomuttlog.vim
	offer to vim ml

why are enum SortType numbered?
	SORT_ALPHA    =  3, ///< Required by makedoc.c
	SORT_SUBJECT  =  3, ///< Sort by the email's subject
	do we need SORT_MAX
	do we need ANY X_MAX enum values?

should use a Buffer
	void mutt_default_save(char *path, size_t pathlen, struct Email *e)
	problem: it leads to format functions that take buf, buflen

move to email/body? (and rename)
	struct Body *mutt_make_multipart(struct Body *b)
	struct Body *mutt_remove_multipart(struct Body *b)
	create email/multipart.c ?

base32 doesn't belong in mutt/random.c
	maybe in mutt/string.c

config
	have macro -- VALID_PTR() for native retvals?

flip to match M.verbose
	#define MUTT_QUIET         (1 << 3) ///< Do not print any messages

isn't used!
	MT_COLOR_MESSAGE_LOG

WRONG - depends on strlen(C_ArrowString)
	why bother for non Braille?
	cursor isn't visible
    /* move the cursor out of the way */
    if (C_ArrowCursor)
      mutt_window_move(menu->win_index, 2, menu->current - menu->top);

add brief README.md to each library dir
	quick description
	links to [devel] arch pages
	links to [user] dialog pages
	note
		which configure options enable the code
		build dependencies
		or push these to the code docs?

neolog vimrc, 'set wrap linebreak showbreak=\ \ \ '

build script
	if clang else gcc
	optional compiler flags

master/main
github/upstream for flatcap repos
sync script looking for upstream remotes pull/push

#define UNUSED(x) UNUSED_ ## x __attribute__((__unused__))

log_disp_terminal doesn't honour log_file_set_level(LL_DEBUG1, false);

maildir_parse_flags
        case 'T': /* trashed */
          if (e->flagged && C_FlagSafe)
should set flags, then update in frontend if C_FlagSafe condition is met

refactor mutt_hcache_open()
  	move to separate function
	if (hcachever == 0x0) { calc; }

check all string-list config items note the separator character
	alter makedoc to use the slist flags to say:
		string list (comma-separated)
	means adding SLIST_SEP_* flags to docs/config.c

index:
	OP_MAIN_CHANGE_FOLDER vs OP_MAIN_CHANGE_FOLDER_READONLY:
	OP_MAIN_VFOLDER_FROM_QUERY vs OP_MAIN_VFOLDER_FROM_QUERY_READONLY
	vfolder READONLY isn't handled correctly, doesn't follow READONLY path

bad C functions
	https://github.com/git/git/blob/master/banned.h

pop/auth.c eliminate #ifdef DEBUG
	(nearly) only use in entire code base

scan-build

reorg 'build' to add options conditionally on compiler

refactor into ONE printf, adjust translations to just "Limit:"
	mutt_str_asprintf(&tmp_str, _("Limit: %s"), limit);
	mutt_str_asprintf(&new_title, "%s - %s", menu_name, tmp_str);

test all graphviz (and other debug) functions compile and run

use ctags to look for reserved keywords, e.g. variables called private
	then put in github action

use `gh gist` to update local mirrors
	python scripts need to turn "private" repos into git@ urls

iwyu
	fix scripts to check for 'config.h'
	common.sh file?

look for static functions called mutt_*
	static void mutt_update_recvattach_menu()
	mutt_bcache_move
	mutt_getaddrinfo_a
	mutt_get_winsize
	mutt_is_predicate_recipient
	mutt_is_spool
	mutt_keymaplist_free
	mutt_keymap_free
	mutt_lookup_color
	mutt_make_greeting
	mutt_md5_process_block
	mutt_md5_read_ctx
	mutt_monitor_getch
	mutt_pattern_node_new
	mutt_update_recvattach_menu
	mutt_update_v2r

copy asan configure/bash scripts to dev page

git lt [NUM]

iwyu: parameterise iwyu.sh '*.c' -> selects correct backend script

add dialog helper functions to get:
	shared data
	priv data
	menu
	etc

rename index vars to idx to avoid index(3)

attach refactor
	libattach
	dlg(view)attach
	pass attach list to functions
		(c.f. tagged emails)

libbrowser?
	dlgbrowser
	split up deps
	elim Menu->is_mailbox_list!
	elim menu_loop() static local var `last_position`

add X_new()/X_free() wrappers for non-trivial objects
	AttachPtr, QClass, Regex, ListNode
	SmimeKey, PgpUid, MuttThread, Message, Hook

merge mutt_buffer_get_field(), mutt_enter_string_full()
	latter only has one caller

run iwyu with openssl enabled?

NDEBUG warnings around asserts

make sure all notifys doxy their data
struct Notify *notify;    ///< Notifications: #NotifyIndex, #IndexSharedData

10 largest functions
	1087 mutt_buffer_select_file
	1013 index_format_str
	 950 main
	 850 mutt_send_message
	 678 mutt_enter_string_full
	 535 mutt_expando_format
	 443 mutt_rfc822_parse_line
	 440 mutt_pager
	 378 parse_set
	 377 mbox_mbox_sync

add with/without build tests for autocrypt
	needs vm without libraries installed

add links in web/dev to gfx repo for arch diagrams etc
	and/or dev list

update web dev translate deployment
	add coverity

update test library

docker
	add readme

sync github to all my private gitlab repos (or delete them)

update neomuttrc.vim
	new config with underscores!
		really deprecate old ones?
	colors with attributes

link observer function docs to Event/EventStruct they receive

doc egypt workflow
	CFLAGS -> svg
	make flatcap branch the main?  or merge?

vim plugin
	setlocal keywordprg=echo;echo;neomutt\ -n\ -F\ /dev/null\ -OQ
	extend to ALL neomutt symbols: commands, functions, colors, etc

https://github.com/marketplace/actions/skip-duplicate-actions

create distro-specific dockerfiles, build weekly
bases
	https://hub.docker.com/_/debian
	https://hub.docker.com/_/ubuntu
	https://hub.docker.com/_/archlinux
	which others?
macos?

https://hub.docker.com/r/dovecot/dovecot

actions: check that matrix builds continue on error

logging error fd == -1 ?
	mutt_socket_write_d() -1> a0000 SELECT "INBOX"

strip mirrors of branches

neomutt version "debug" -> "logging"?
	assuming that's what it is

change browser_sort() to not take *entire* state,
	just the array that needs sorting
	convert all comparision functions to the qsort_r() compatible
	factor out config use to top-level parameter

these aren't *comp* flags, separate flags?
	MUTT_COMP_CLEAR
	MUTT_COMP_PASS
add unbuffered flag?

static struct SmimeKey *smime_ask_for_key(char *prompt, KeyFlags abilities, bool only_public_key)
checks for prompt, but it's always set

find potential places for struct Buffer
	921	ag "([a-z_]+(->[a-z_]+)*), sizeof\(\1\)"
	64	ag "([a-z_]+(->[a-z_]+)*)-\>data, \1-\>dsize"

refactor "not reached"
	ag "not reached" | wc -l
	13

kill #define EXTRA_SPACE (15 + 7 + 2)
	recvcmd.c
	commands.c
heuristic dating back to 2000

reuse yml actions
	uses: google/oss-fuzz/infra/cifuzz/actions/build_fuzzers@master
	# org/repo/dir/dir2/dir3
	# in dir3/actions.yml is run
	set oss-fuzz repo, file
		infra/cifuzz/actions/build_fuzzers/action.yml

useful?
	#if defined(__COVERITY__)

comment to avoid warning
/* coverity[check_return] */
/* coverity[suspicious_sizeof] */

typo?  autocrypt?!
	de.po:msgid "no"
	de.po-msgstr "nein"
vs
	de.po:msgid "No"
	de.po:msgstr "No"

review all reallocs => memset to clear new memory
	email/attach.c has lots!
	mutt_realloc_zero(ptr, size, old_size)

find/read the `git log --date=human` code
	or better still --date=relative

how much work to fix the new_mail command?
	notifications from backends

copy [debug/compose] -> neomutt-old
	update it

action for IRC notifier
	https://github.com/rectalogic/notify-irc
	https://github.com/Gottox/irc-message-action
	on:
		discussion:
			types: [created, edited, answered]

translate: "tag-" ?

update {windows,data,overview}.txt

add sample patterns to test/leak.c
	enable pattern coverage
	need mailbox/emails, menu data

improve score
	https://www.mail-tester.com/

post freeze:
	colour changes - explanation
	doc reorg
	website update
		intro
		screenshots
	upstream
		small
	unit test coverage
	remaining big
		colour
		get_field
		browser
		small dispatchers
	update copyright date
	update {windows,data,overview}.txt
		dev web section
	compose multipart video
	new coverity defect

post release:
	c99 -> c11? (threading)
	POSIX:2008
	cull issues
	author repo / git mailmap

fix mutt/neomutt shared config

asan analysis mention?
	debian: libasan6
	fedora: libasan

vim neomutt, -noregex not recognised

why doesn't Pager support OpGeneric
	it's skipped in km_dokey()

man pages (inc synonyms, deprecated)
neomuttrc.vim

config docs: unify (imap only)-style sections
	dedupe any deprecated/synonym refs

generate list of dialogs (all combinations)
	macros/config to navigate to each
	<write-screen>X<enter>
	sample emails / config
	draw graph
	pager: plain, email, attachment mode
		with / without index
		with / without sidebar
		with / without help
	index: normal, postpone, attach-email
		with / without sidebar
		with / without help

:color OBJ
	display one-line summary of colour in msgwin
	how? need special handler to display the colours
	temporarily take ownership?
	what about colours that take multiple regexes?
		resize msgwin?  how much?

alternative to ASAN?
	clang -ftrivial-auto-var-init=pattern -o jim jim.c

not translated
	snprintf(buf, sizeof(buf), "-- Remailer chain [Length: %d]", len);
change to host list?
	mutt_error(_("Can't get mixmaster's type2.list"));

find/kill
	if (x) return (or continue or break)
	else if...
	if (.*\n\s\+{\n\s\+return\>.*\n\s\+}\n\s\+else

doesn't cause a repaint of the index
	set narrow_tree = no

root
	weekly ctags
	/usr/include
	/usr/lib/gcc/x86_64-redhat-linux/12/include/
OR
	run ctags OF those dirs, elsewhere
	keep in ~/.cache

contrib:
	update rpm spec & bugzilla
	notify packagers
		ask them NOT to compress everything!

bisect <tab> to next mail hangs

functionise `git d1`

from python/black:
	Authors
	The author list is quite long nowadays, so it lives in its own file.
	See AUTHORS.md

anything in wiki worth saving?

find all functions returning 0=success,-1=failure
	check they are tested with `if (x() == 0)` not `if (!x())`

oauth2/mutt_oauth2.py.README -> README.md
	markdown-ify

demote all neo branches to flatcap/DATE

italics
	https://apple.stackexchange.com/a/267261
	mac:
		Terminal.app good
		iTerm.app needs https://apple.stackexchange.com/a/267261

A_ITALIC doesn't exist in centos 7

acutest implement ASSERT_EQ(left,right), ASSERT_NEQ(left,right)
	this would allow acutest to print both values when they differ
	(saving the user from doing so)
	update LOTS of our tests

check doxygen version in ubuntu-latest
	1.9.1
check if the debian-sid container is still needed

make lmdb, rocksdb, tdb default stores (modern)
	lmdb, rocksdb, tdb, tokyocabinet, kyotocabinet, bdb, gdbm, qdbm
	encourage packagers to choose at least one of the first three

docs: add "recently changed" section to front of guide!
	plus link to github releases page / changelog

https://github.com/autozimu/LanguageClient-neovim
https://people.freebsd.org/~gahr/lc.vim

add a weekly build action to test all the debug-* options still compile
	include multiple graphviz options

all style guide ideas -> discussion

graphviz doc to dev/analysis
add brief page for each option
	--debug-backtrace   Enable backtrace support with libunwind
	--debug-color       Enable Color dump
	--debug-email       Enable Email dump
	--debug-graphviz    Enable Graphviz dump
	--debug-notify      Enable Notifications dump
	--debug-queue       Enable TAILQ debugging
	--debug-window      Enable windows dump
What about?
	--fuzzing           Enable Fuzz Testing

some actions missing from https://neomutt.org/dev/actions
	~/work/site-actions/

convert all questions(issues) -> discussions
	1) find all question issues
	gh issue list --label type:question --state closed

list macros
	count their use
	eliminate any?
		82 MoreArgs
		68 mutt_set_flag
		52 SKIPWS
		48 mutt_socket_send
		29 state_putc

archive branches?

once we can test mutt_parse_rc_buffer()
	wrap a fuzzer around it!
	seeded with hundreds of valid set/unset lines

top tip
	:bind index p end-cond
	# make 'p' do nothing, silently, on the index

tests combine
	NeoMutt = test_neomutt_create();
	TEST_CHECK(NeoMutt != NULL);
	TEST_CHECK(cs_register_variables(NeoMutt->sub->cs, Vars, DT_NO_FLAGS));

add logging info to ubsan page
	https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#logging

config register
	ignore dupes?
	pop/imap share MessageCacheClean

for --devel-feature, add a section in the ./configure summary
that explains: this feature may change or be removed without warning
please give feedback
create discussion for each --devel option and link to it

:source supports relative paths, but :lua-source doesn't!

speed test a huge mbox mailbox vs 2022-04-29
	compare against mutt

web/dev document oss-fuzz steps for a local build/test

neo-bot: version command (only directly to bot)
	version number (need one)
	repo location

is all the code need to parse an email independent?
can it be:
	library-ised
	stressed tested?
	speed tested?
	fuzzed?

How many globals are doxygen doc'd?
	ffch ctags -x --c-kinds=v

understand its use and rename it to match
	@note The top-well-named MUTT_ICONV_HOOK_FROM acts on charset-hooks, not at all on iconv-hooks.

change function typedefs?
	function-pointer.org
	anyways, just don't do the pointer as part of the typedef, and it's much easier
	typedef void func_t(int, int);
	func_t *ptr = NULL;
	this reads _exactly_ like a function declaration, much easier to remember

update neomutt-test-files readme -- no --testing

sieve for github maintainers
	more sieves

update fedora / centos install pages
	update copr page
	dnf install epel-release
	dnf install neomutt
Importing GPG key 0x8483C65D:
 Userid     : "CentOS (CentOS Official Signing Key) <security@centos.org>"
 Fingerprint: 99DB 70FA E1D7 CE22 7FB6 4882 05B5 55B3 8483 C65D
 From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
Is this ok [y/N]: y

add `test/neomutt-test -E` as a separate test
	fix two failing cases, if possible

update neomutt binaries

test our more toolbox distros
	https://github.com/toolbx-images/images

