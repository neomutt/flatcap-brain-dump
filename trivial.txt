simplify cppcheck example
	cppcheck --enable=all --language=c --std=c99 -i autosetup --platform=unspecified -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048 -I/usr/include -I/usr/include/mit-krb5 -I. --output-file=cppcheck.xml --xml --xml-version=2 <path to neomutt source code directory>
	cppcheck --enable=all --language=c --std=c99 -i autosetup -D_POSIX_PATH_MAX=4096 -DPATH_MAX=2048  -I. --output-file=c1  .
use --check-config to list missing header files
working example 2023-05-03
	cppcheck --verbose --enable=all --language=c --std=c99 -i docs -i autosetup -i test -DPATH_MAX=2048 -D__x86_64__ -I. -I/usr/include -I/usr/lib/gcc/x86_64-redhat-linux/13/include -I/usr/include/qdbm --output-file=c1 .

fix !USE_NNTP build
	check !USE_SIDEBAR build

test int against 0
	what about ALL int members?

demote to warnings
mutt_error(_("Warning: XXX"));

if (!(a && b))
if (!(a || b))
ag 'if \(!\(.*(&&|\|\|).*\)\)'

ag '\(!\((.*) && (.*)\)\)'
ag '\(!\((.*) \|\| (.*)\)\)'

20 largest functions - 2023-04-30
	982 index_format_str()
	944 main()
	851 mutt_send_message()
	524 mutt_expando_format()
	431 mutt_rfc822_parse_line()
	398 mutt_pager()
	372 mbox_mbox_sync()
	329 status_format_str()
	318 folder_format_str()
	316 pgp_class_application_handler()
	310 mutt_view_attachment()
	308 mutt_index_menu()
	304 resolve_types()
	296 mutt_copy_hdr()
	295 qstyle_classify()
	294 pattern_exec()
	294 mx_mbox_close()
	292 mutt_set_flag_update()
	288 display_line()
	281 mutt_init()

eliminate enum AccountType?
use enum MailboxType
	what about smtp?
	add entry?

conditional constants - reduce to a comment
	Hmm... non-functional enum entries might cause problems
	MENU_KEY_SELECT_PGP
	MENU_MIX
	MT_COLOR_DIVIDER
	MUTT_PAT_NEWSGROUPS
	MUTT_OPEN_HOOK
	REDRAW_SIDEBAR

body_copy() : move foreach param -> param_dup()

check all src against vim folding

pager
	replace CHECK_* macros with function
	bool pre_requisite(flag|flag, quiet);
	if (!pre_requisite())
		break
	need interface for index/pager operations?
	what are possible outcomes?
	break (continue loop)
	exit (function)
	fallthrough? NO refactor to avoid

replace "for (int" -> size_t in libmutt
	177 occurrences

browser.c has a lot of
	struct Email *tmp;
	tmp's a bad name for a variable
	scratch is too

move all
	if (!param)
	to start of function
	return early
	ag "^ +if \(.*\n +return"
	2540 functions
	start with libmutt?

decrypt_part - Explain r_is_signed better
	returns -1, 0, 1, 2

are these identical? YES
	static char crypt_flags(KeyFlags flags)
	static char pgp_flags(KeyFlags flags)

Convert to enum?
	struct ConnAccount.type
		unsigned char type;     ///< Connection type, e.g. #MUTT_ACCT_TYPE_IMAP

config system
	can it return warnings?
	yes, but it doesn't

init.c
	getsid() is POSIX2001
	no need for #ifdef?
	exists in cygwin

string fn to pretty print \t, \r, \n for tests
	handle NULL, quote string

wrong name, should be _free()
	void mutt_addrlist_clear(struct AddressList *al)
	...
	mutt_addr_free(&a);
	hmm... but it doesn't free the actual AddressList

This doesn't seem to be documented in neomutt's manual either
I wonder if we could kill this unexpected behaviour
	/* This is an undocumented feature of ELM pointed out to me by Felix von
	 * Leitner <leitner@prz.fu-berlin.de> */
	if (mutt_str_strcmp(mutt_b2s(buf), ".") == 0)
	  mutt_buffer_strcpy(buf, LastSaveFolder);
	else
	  mutt_str_strfcpy(LastSaveFolder, mutt_b2s(buf), sizeof(LastSaveFolder));

flags typedef?
	/* force flags passed to mutt_mailbox_check() */
	#define MUTT_MAILBOX_CHECK_FORCE       (1 << 0)
	#define MUTT_MAILBOX_CHECK_FORCE_STATS (1 << 1)

flagify
	#define MUTT_UNBIND  1<<0
	#define MUTT_UNMACRO 1<<1

eliminate complicated macros (multiline, conditionals, many callers)
refactor complicated or oft-used macros
	email/mime.h:85:1:   ENCODING         7
	email/mime.h:77:1:   is_multipart     8
	mutt/buffer.h:43:1:  MoreArgs         78
	mutt/regex3.h:52:1:  REG_COMP         18
	mutt/string2.h:47:1: SKIPWS           51
	state.h:56:1:        state_putc       30
	state.h:55:1:        state_puts       98
	mutt/string2.h:60:1: terminate_buffer 9
	mutt/string2.h:51:1: terminate_string 5
	email/mime.h:83:1:   TYPE             35

main.c
	text outside of else, search for others (over 60 comments before else)
	/* If editing the infile, keep it around afterwards so
	 * it doesn't get unlinked, and we can rebuild the draft_file */
	else

why are enum SortType numbered?
	SORT_ALPHA    =  3, ///< Required by makedoc.c
	SORT_SUBJECT  =  3, ///< Sort by the email's subject
	do we need SORT_MAX
	do we need ANY X_MAX enum values?

should use a Buffer
	void mutt_default_save(char *path, size_t pathlen, struct Email *e)
	problem: it leads to format functions that take buf, buflen

move to email/body? (and rename)
	struct Body *mutt_make_multipart(struct Body *b)
	struct Body *mutt_remove_multipart(struct Body *b)
	create email/multipart.c ?

base32 doesn't belong in mutt/random.c
	maybe in mutt/string.c

config
	have macro -- VALID_PTR() for native retvals?

flip to match M.verbose
	#define MUTT_QUIET         (1 << 3) ///< Do not print any messages

isn't used!
	MT_COLOR_MESSAGE_LOG

add brief README.md to each library dir
	quick description
	links to [devel] arch pages
	links to [user] dialog pages
	note
		which configure options enable the code
		build dependencies
		or push these to the code docs?

neolog vimrc, 'set wrap linebreak showbreak=\ \ \ '

build script
	if clang else gcc
	optional compiler flags

master/main
github/upstream for flatcap repos
sync script looking for upstream remotes pull/push

#define UNUSED(x) UNUSED_ ## x __attribute__((__unused__))

log_disp_terminal doesn't honour log_file_set_level(LL_DEBUG1, false);

maildir_parse_flags
        case 'T': /* trashed */
          if (e->flagged && C_FlagSafe)
should set flags, then update in frontend if C_FlagSafe condition is met

refactor mutt_hcache_open()
  	move to separate function
	if (hcachever == 0x0) { calc; }

check all string-list config items note the separator character
	alter makedoc to use the slist flags to say:
		string list (comma-separated)
	means adding SLIST_SEP_* flags to docs/config.c

index:
	OP_MAIN_CHANGE_FOLDER vs OP_MAIN_CHANGE_FOLDER_READONLY:
	OP_MAIN_VFOLDER_FROM_QUERY vs OP_MAIN_VFOLDER_FROM_QUERY_READONLY
	vfolder READONLY isn't handled correctly, doesn't follow READONLY path

bad C functions
	https://github.com/git/git/blob/master/banned.h

pop/auth.c eliminate #ifdef DEBUG
	(nearly) only use in entire code base

scan-build

reorg 'build' to add options conditionally on compiler

refactor into ONE printf, adjust translations to just "Limit:"
	mutt_str_asprintf(&tmp_str, _("Limit: %s"), limit);
	mutt_str_asprintf(&new_title, "%s - %s", menu_name, tmp_str);

test all graphviz (and other debug) functions compile and run

use ctags to look for reserved keywords, e.g. variables called private
	then put in github action

use `gh gist` to update local mirrors
	python scripts need to turn "private" repos into git@ urls

look for static functions called mutt_*
	ignore callback functions?
	mutt_bcache_move               mutt_poll_fd_add
	mutt_date_parse_rfc5322_strict mutt_poll_fd_remove
	mutt_getaddrinfo               mutt_randbuf
	mutt_getaddrinfo_a             mutt_regmatch_end
	mutt_get_hook_type             mutt_regmatch_len
	mutt_get_winsize               mutt_regmatch_start
	mutt_gsasl_callback            mutt_sasl_cb_authname
	mutt_gsasl_init                mutt_sasl_cb_log
	mutt_is_predicate_recipient    mutt_sasl_cb_pass
	mutt_is_spool                  mutt_sasl_conn_close
	mutt_keymaplist_free           mutt_sasl_conn_open
	mutt_keymap_free               mutt_sasl_conn_poll
	mutt_make_greeting             mutt_sasl_conn_read
	mutt_md5_process_block         mutt_sasl_conn_write
	mutt_md5_read_ctx              mutt_sasl_get_callbacks
	mutt_monitor_getch             mutt_sasl_start
	mutt_parse_idxfmt_hook         mutt_sort_subthreads
	mutt_parse_unhook              mutt_ssl_socket_setup
	mutt_pattern_list_new          mutt_str_is_email_wsp
	mutt_pattern_new               mutt_update_v2r
	mutt_pgp_command

git lt [NUM]

iwyu:
	run with openssl enabled?
	parameterise the gcc location?

add dialog helper functions to get:
	shared data
	priv data
	menu
	etc

rename index vars to idx to avoid index(3)

attach refactor
	libattach
	dlg(view)attach
	pass attach list to functions
		(c.f. tagged emails)

libbrowser?
	dlgbrowser
	split up deps
	elim Menu->is_mailbox_list!
	elim menu_loop() static local var `last_position`

add X_new()/X_free() wrappers for non-trivial objects
	AttachPtr, QClass, Regex, ListNode
	SmimeKey, PgpUid, MuttThread, Message, Hook

merge mutt_buffer_get_field(), mutt_enter_string_full()
	latter only has one caller

NDEBUG warnings around asserts

update test library

sync github to all my private gitlab repos (or delete them)

vim plugin
	setlocal keywordprg=echo;echo;neomutt\ -n\ -F\ /dev/null\ -OQ
	extend to ALL neomutt symbols: commands, functions, colors, etc

https://github.com/marketplace/actions/skip-duplicate-actions

create distro-specific dockerfiles, build weekly
bases
	https://hub.docker.com/_/debian
	https://hub.docker.com/_/ubuntu
	https://hub.docker.com/_/archlinux
	which others?
macos?

https://hub.docker.com/r/dovecot/dovecot

actions: check that matrix builds continue on error

logging error fd == -1 ?
	mutt_socket_write_d() -1> a0000 SELECT "INBOX"

neomutt version "debug" -> "logging"?
	assuming that's what it is

change browser_sort() to not take *entire* state,
	just the array that needs sorting
	convert all comparision functions to the qsort_r() compatible
	factor out config use to top-level parameter

these aren't *comp* flags, separate flags?
	MUTT_COMP_CLEAR
	MUTT_COMP_PASS
add unbuffered flag?

static struct SmimeKey *smime_ask_for_key(char *prompt, KeyFlags abilities, bool only_public_key)
checks for prompt, but it's always set

find potential places for struct Buffer
	921	ag "([a-z_]+(->[a-z_]+)*), sizeof\(\1\)"
	64	ag "([a-z_]+(->[a-z_]+)*)-\>data, \1-\>dsize"

refactor "not reached"
	ag "not reached" | wc -l
	13

kill #define EXTRA_SPACE (15 + 7 + 2)
	recvcmd.c
	commands.c
heuristic dating back to 2000

reuse yml actions
	uses: google/oss-fuzz/infra/cifuzz/actions/build_fuzzers@master
	# org/repo/dir/dir2/dir3
	# in dir3/actions.yml is run
	set oss-fuzz repo, file
		infra/cifuzz/actions/build_fuzzers/action.yml

useful?
	#if defined(__COVERITY__)

comment to avoid warning
/* coverity[check_return] */
/* coverity[suspicious_sizeof] */

typo?  autocrypt?!
	de.po:msgid "no"
	de.po-msgstr "nein"
vs
	de.po:msgid "No"
	de.po:msgstr "No"

find/read the `git log --date=human` code
	or better still --date=relative

how much work to fix the new_mail command?
	notifications from backends

action for IRC notifier
	https://github.com/rectalogic/notify-irc
	https://github.com/Gottox/irc-message-action
	on:
		discussion:
			types: [created, edited, answered]

translate: "tag-" ?

update {windows,data,overview}.txt

add sample patterns to test/leak.c
	enable pattern coverage
	need mailbox/emails, menu data

improve score
	https://www.mail-tester.com/

post freeze:
	colour changes - explanation
	doc reorg
	website update
		intro
		screenshots
	upstream
		small
	unit test coverage
	remaining big
		colour
		get_field
		browser
		small dispatchers
	update copyright date
	update {windows,data,overview}.txt
		dev web section
	compose multipart video
	new coverity defect

post release:
	c99 -> c11? (threading)
	POSIX:2008
	cull issues
	author repo / git mailmap

man pages (inc synonyms, deprecated)

config docs: unify (imap only)-style sections
	dedupe any deprecated/synonym refs

generate list of dialogs (all combinations)
	macros/config to navigate to each
	<write-screen>X<enter>
	sample emails / config
	draw graph
	pager: plain, email, attachment mode
		with / without index
		with / without sidebar
		with / without help
	index: normal, postpone, attach-email
		with / without sidebar
		with / without help

:color OBJ
	display one-line summary of colour in msgwin
	how? need special handler to display the colours
	temporarily take ownership?
	what about colours that take multiple regexes?
		resize msgwin?  how much?

alternative to ASAN?
	clang -ftrivial-auto-var-init=pattern -o jim jim.c

change to host list?
	mutt_error(_("Can't get mixmaster's type2.list"));

find/kill
	if (x) return (or continue or break)
	else if...
	if (.*\n\s\+{\n\s\+return\>.*\n\s\+}\n\s\+else

root
	weekly ctags
	/usr/include
	/usr/lib/gcc/x86_64-redhat-linux/13/include/
OR
	run ctags OF those dirs, elsewhere
	keep in ~/.cache

contrib:
	update rpm spec & bugzilla
	notify packagers
		ask them NOT to compress everything!

bisect <tab> to next mail hangs

functionise `git d1`

from python/black:
	Authors
	The author list is quite long nowadays, so it lives in its own file.
	See AUTHORS.md

anything in wiki worth saving?

find all functions returning 0=success,-1=failure
	check they are tested with `if (x() == 0)` not `if (!x())`

oauth2/mutt_oauth2.py.README -> README.md
	markdown-ify

italics
	https://apple.stackexchange.com/a/267261
	mac:
		Terminal.app good
		iTerm.app needs https://apple.stackexchange.com/a/267261

A_ITALIC doesn't exist in centos 7

acutest implement ASSERT_EQ(left,right), ASSERT_NEQ(left,right)
	this would allow acutest to print both values when they differ
	(saving the user from doing so)
	update LOTS of our tests

check doxygen version in ubuntu-latest
	1.9.1
check if the debian-sid container is still needed

make lmdb, rocksdb, tdb default stores (modern)
	lmdb, rocksdb, tdb, tokyocabinet, kyotocabinet, bdb, gdbm, qdbm
	encourage packagers to choose at least one of the first three

docs: add "recently changed" section to front of guide!
	plus link to github releases page / changelog
	:changelog
changelog
	markdown files

https://github.com/autozimu/LanguageClient-neovim
https://people.freebsd.org/~gahr/lc.vim

all style guide ideas -> discussion

convert all questions(issues) -> discussions
	1) find all question issues
	gh issue list --label type:question --state closed

list macros
	count their use
	eliminate any?
		82 MoreArgs
		68 mutt_set_flag
		52 SKIPWS
		48 mutt_socket_send
		29 state_putc

once we can test mutt_parse_rc_buffer()
	wrap a fuzzer around it!
	seeded with hundreds of valid set/unset lines

top tip
	:bind index p end-cond
	# make 'p' do nothing, silently, on the index

tests combine
	NeoMutt = test_neomutt_create();
	TEST_CHECK(NeoMutt != NULL);
	TEST_CHECK(cs_register_variables(NeoMutt->sub->cs, Vars, DT_NO_FLAGS));

config register
	ignore dupes?
	pop/imap share MessageCacheClean

for --devel-feature, add a section in the ./configure summary
that explains: this feature may change or be removed without warning
please give feedback
create discussion for each --devel option and link to it

:source supports relative paths, but :lua-source doesn't!
	when called from hooks

speed test a huge mbox mailbox vs 2022-04-29
	compare against mutt

web/dev document oss-fuzz steps for a local build/test

neo-bot: version command (only directly to bot)
	version number (need one)
	repo location

is all the code need to parse an email independent?
can it be:
	library-ised
	stressed tested?
	speed tested?
	fuzzed?

How many globals are doxygen doc'd?
	ffch ctags -x --c-kinds=v

understand its use and rename it to match
	@note The top-well-named MUTT_ICONV_HOOK_FROM acts on charset-hooks, not at all on iconv-hooks.

change function typedefs?
	function-pointer.org
	anyways, just don't do the pointer as part of the typedef, and it's much easier
	typedef void func_t(int, int);
	func_t *ptr = NULL;
	this reads _exactly_ like a function declaration, much easier to remember

update neomutt-test-files readme -- no --testing

sieve for github maintainers
	more sieves

update fedora / centos install pages
	update copr page
	dnf install epel-release
	dnf install neomutt
Importing GPG key 0x8483C65D:
 Userid     : "CentOS (CentOS Official Signing Key) <security@centos.org>"
 Fingerprint: 99DB 70FA E1D7 CE22 7FB6 4882 05B5 55B3 8483 C65D
 From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
Is this ok [y/N]: y

add `test/neomutt-test -E` as a separate test
	fix two failing cases, if possible

test our more toolbox distros
	https://github.com/toolbx-images/images

split up multiple assignments
        grep " = [^,;]* = "
        grep " = [^,;]* [!=]= "

update copyright dates
        ∀ users > ~10 lines

how to extract libmenu, so that it can be independently tested
        3 $configs:
                menu_context, menu_move_off, menu_scroll
        20 <functions>
                OP_BOTTOM_PAGE, OP_CURRENT_BOTTOM, OP_CURRENT_MIDDLE,
                OP_CURRENT_TOP, OP_FIRST_ENTRY, OP_HALF_DOWN, OP_HALF_UP,
                OP_LAST_ENTRY, OP_MIDDLE_PAGE, OP_NEXT_ENTRY, OP_NEXT_LINE,
                OP_NEXT_PAGE, OP_PREV_ENTRY, OP_PREV_LINE, OP_PREV_PAGE,
                OP_SEARCH, OP_SEARCH_NEXT, OP_SEARCH_OPPOSITE,
                OP_SEARCH_REVERSE, OP_TOP_PAGE
        lists: empty, 1, 2, <page, =page, >page, big, really big

mention corpus and dictionaries

BUILD
	PR template
	- All builds and tests are passing
	update to mention test files
	https://github.com/neomutt/neomutt-test-files

	update all templates

	test make install / uninstall?
		test for zero files afterwards

	add to build-and-test action
		if po/*.po have changed
		msgfmt --statistics -c -o /dev/null po/pl.po

	move mutt_X.[ch] into libX
		deps don't matter, it's a separate src file
		just mutt_history.*

	move hdrline to libindex?
		rename to 'index'?
		struct HdrFormatInfo

CLI
	neomutt -v output:
		add $LANG?
		multi-column output to reduce lines?

	neomutt version
		deprecate the fixed part?
		might interfere with `ifdef` command
		do _those_ features matter if they've been included for so long?
		when did it last change? > 4 years

DOCS
	docs: "delimited" lists -> "separated"

FUNCTIONS
	split browser cases by function
		and other dialogs
		so all <functions> are independent functions()
		check against OpPager lists, etc
		dlg_select_attachment / mutt_attach_display_loop
			attach/recvattach.c:946:       9  mutt_attach_display_loop

	browser seems ok

	are ANY <functions> handled in the switch/case?

	rename OPs to match functions
		e.g. drop MAIN_
		{ "set-flag", OP_MAIN_SET_FLAG },

	dedupe function names: (check again for new dupes)
		add_cert
		add_folder
		append_message
		attach_config_observer
		attach_window_observer
		cmp_version_strings
		create_gpgme_context
		dump_menu
		format_line
		init_mailbox
		mutt_exit
		mutt_file_lock
		mutt_file_unlock
		mutt_resize_screen
		mutt_ssl_socket_setup
		mutt_ssl_starttls
		mutt_str_asprintf
		pgp_check_traditional_one_body
		tls_set_priority

	rename: buf, buflen
		look for others, how?
		* km_expand_key - Get the key string bound to a Keymap
		* @param s   Buffer for the key string
		* @param len Length of buffer

RENAME
	rename compose/compose.c to compose/dlg_compose.c
		others?

	rename params
		size_t mutt_mb_mbstowcs(wchar_t **pwbuf, size_t *pwbuflen, size_t i, char *buf);

	'l' bad choice of param name
		First l chars of both strings are equal

	rename s/mutt_buffer_select_file/dlg_browser/
		factor out the 'dialog' part first

	change to **ptr, look for others
	free functions to take (**ptr)
	then deref to Type *t = *ptr;
	check ALL free pointers are safe on NULL -- document param as such

	SEND_NO_FREE_HEADER refers to an Email, SEND_NO_FREE_EMAIL?

	should be _free() -> need _new() too
		void mutt_bcache_close(struct BodyCache **bcache)

	variables, urgh! sendlib.c
		mutt_lookup_mime_type() int szf, sze, cur_sze;

TEST-TIDY
	test cases, delete contents of /tmp afterwards

	list all the test cases

subjectrx results should be stored in EmailView not Envelope
	char *subject;   ///< Email's subject
	char *real_subj; ///< Offset of the real subject
	char *disp_subj; ///< Display subject (modified copy of subject)

move mview.* into index/
	or libmview? encapsulate it?
		if so what's in index? what's in mview?

IRC user: I was just wondering why tag-pattern isn't available in the alias menu

:setenv
	don't leave neomutt to setenv query?
	translate tabs and escapes
		flags for the pager?
	any key to leave the pager (flag?)

coverage
	get 100% function coverage first?
	notmuch - reachable?
	enter/functions
	mutt/memory
	store/*

identify 100 old issues to kill
	include easy-task, etc

restore progress bar to imap
	caused repaint race condition
	removed in e3773a736

deprecate COPR
	HOW?

replace urlview (unmaintained) with urlscan (maintainer, more features)
	need to change /etc/neomuttrc
	need to update rpm .spec file

refactor: ?
	only used in two tests
	can it be used for anything else?
	#define SET_UP() (file_set_up(__func__))
	#define TEAR_DOWN(fp) (file_tear_down((fp), __func__))

ARRAY_FREE -> _CLEAR
	free(**ptr) free, null pointer
	clear(*ptr) empty
	cleanup()   tidy global resources
add to code docs
void buf_dealloc(struct Buffer *buf); -> _clear()

external pager - hitting 'j' doesn't advance to next email

triv: break up huge case: clauses
	measure all of them

sort out bash history

elim mutt.org from code
	just one ref to urlview

refactor actions to use actions/checkout to *push*
	https://github.com/actions/checkout/#Push-a-commit-using-the-built-in-token
	.github/workflows/doxygen.yml
	.github/workflows/translate.yml

commands.c
	lots of buf->data -> buf_string(buf)
	buf->data[0] -> buf_at(buf, 0)
	look for others
	make buf_at() inline?

review all reallocs => memset to clear new memory
	email/attach.c has lots!
	mutt_realloc_zero(ptr, size, old_size)
	couple of places using bare realloc
	lazy_realloc() in hcache
		library-ify for Buffer too?

op_exit() doesn't
	mutt_startup_shutdown_hook(MUTT_SHUTDOWN_HOOK);
	mutt_debug(LL_NOTIFY, "NT_GLOBAL_SHUTDOWN\n");
like op_quit() does

try https://github.com/grobian/html2text

fopen() -> mutt_file_fopen() ?
	75 fopen(), 122 mutt_file_fopen()
	7 fclose(), 360 mutt_files_close()
	check for "fopen" error messages

tidy live neomutt config
	dupe to ~mutt
create parallel mutt config
	dupe to ~mutt
start by flattening it into one file
then reorganise and resplit
move into .config/neomutt
fix git upstream for main repo

convert hcache to use Buffer as the store
	eliminate lazy_realloc

hcache: lazy_realloc() is only lazy to 4KiB
	then it reallocs for every tiny addition
	change increase to 4KiB blocks
	all 54000 test emails lead to hcache sizes < 4KiB

neomuttrc.vim
	neomuttlog.vim offer to vim ml

	update neomuttrc.vim
		colors with attributes

	vim neomutt, -noregex not recognised

	get vim css color working with neomutt config #rgb colour syntax

filter inbox into folders
	sieve future mail

config that isn't relative to parent config file
	$certificate_file
	$autocrypt_dir
	check all files/dirs?
	are *any* expanded when set?

strip down /home/github
	create backup script to ignore 3rd-party/
	dated, vivo-github.tar

DT_ONCE, DT_ON_STARTUP
	can't be changed after startup completes
	i.e. must be in config file or cli: `-e set...`

discussions
	realloc_zero() - ARRAY upgrades
	address book upgrades (tags, limit, sidebar, colour)
	background edit - steps, arch how?
	-nopoll -nonotify flags
	DT_STARTUP
	buffer.buf_at() inline
	buffer opaque?
	buf_len() vs buf_strlen()?
	offer up some code-scanning issues for fixing

eliminate some CodeQL warnings/errors
	https://github.com/neomutt/neomutt/security/code-scanning
	dev analysis page with download instructions

try to find homes for the contents of protos.h
	or merge it with something else

analyse all /*.h used in */*.[ch]
	e.g. format_t to core/ ?
		(used by many libraries)

move *.rc to ~/.mutt/
move *.mbox to ~/mail/

:help [TOPIC]
	e.g. to_chars
	auto-complete on TOPICs
	what would be the source?
	would it be translated?

asan analysis mention?
	debian: libasan6
	fedora: libasan

graphviz doc to dev/analysis
What about?
	--fuzzing           Enable Fuzz Testing
add _dev analysis fuzzing page

copy asan configure/bash scripts to dev page

some actions missing from https://neomutt.org/dev/actions
	~/work/site-actions/
	macOS

make sure all notifys doxy their data
struct Notify *notify;    ///< Notifications: #NotifyIndex, #IndexSharedData

add with/without build tests for autocrypt
	needs vm without libraries installed

add links in web/dev to gfx repo for arch diagrams etc
	and/or dev list

update web dev translate deployment
	add coverity

link observer function docs to Event/EventStruct they receive

doc egypt workflow
	CFLAGS -> svg
	make flatcap branch the main?  or merge?

add logging info to ubsan page
	https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#logging

kill the num_accounts and return the value
int mutt_autocrypt_db_account_get_all(struct AutocryptAccount ***accounts, int *num_accounts)

not closed on exit
        static FILE *fp_random;

menu globals, not freed on exit?
        can't find where it's freed
        char *SearchBuffers[MENU_MAX];

triv: dump keymaps #ifdef? --debug-keymaps

asan instructions -- add EXTRA_CFLAGS='-ggdb3 -O0' to ensure debugging info
	seems not to matter, only stripping the binary affects the output

MARKER Buffer.data
	count dereferences outside of mutt/buffer.[ch]
		main test
		449   30 Buffer.data
		158    0 Buffer.dptr
		 75    5 Buffer.dsize
		 62    0 Buffer.data, Buffer.dsize
	aim to replace with buf_at()
	need to inline buf_at() first
	ASSERT() range checks?
	make the Buffer opaque?
	distinguish between buf_len() and buf_strlen()

colour schemes
	need background = light|dark
	theme-name-light.rc
	theme-name-dark.rc
	could link objects together, like vim
		color sidebar_indicator link indicator

https://github.com/MaJerle/c-code-style
https://github.com/mcinglis/c-style

help
	use expandos to generate the help page
		ideally needs dynamic widths to use space as needed
	but dump the output to a file, then pager as normal

no space before \$
	ag -u '[^ \t]\\$'

rename mw_ source files like dlg_*.c?

be explicit?
	win->wdata_free = NULL; // No need, we hold the data
or dynamically alloc them, and prevent lots of github security warnings
	win->wdata_free = NULL; // No need, we hold the data
	autocrypt/dlg_autocrypt.c:326:6: dlg->wdata = &ad;
	browser/dlg_browser.c:1368:6:    dlg->wdata = priv;
	enter/window.c:263:8:            win->wdata = &wdata;
	gui/simple.c:140:6:              dlg->wdata = win_menu->wdata;
	history/dlg_history.c:147:6:     dlg->wdata = &hd;
	mixmaster/dlg_mixmaster.c:149:6: dlg->wdata = priv;
	ncrypt/dlg_gpgme.c:751:6:        dlg->wdata = &gd;
	ncrypt/dlg_pgp.c:669:6:          dlg->wdata = &pd;
	ncrypt/dlg_smime.c:224:6:        dlg->wdata = &sd;
	pager/pager.c:420:6:             win->wdata = priv;
	pattern/dlg_pattern.c:344:6:     dlg->wdata = &pd;
	postpone/dlg_postpone.c:215:6:   dlg->wdata = &pd;

nf - no fail versions of functions
	c/o @ossilator Oswald Buddenhagen 
	https://sourceforge.net/p/isync/isync/ci/master/tree/src/util.c#l609

L10N comment, wrong file
	mutt_str_pretty_size() in mutt/string.c

BUG: resolve=no <toggle-new> doesn't refresh -- ctrl-l fixes

BUG: <mail><tab> -> address book, leaves progress bar on screen

BUG: doesn't cause a repaint of the index
	set narrow_tree = no

BUG: jindraj | <toggle-write> doesn't trigger redraw of status bar
	bisect: https://github.com/neomutt/neomutt/commit/19003d1d09c5210c1b8e31bae81bbfc4efa21968
	drop notification relays

BUG: nn0 - compose email, $from is unset
	compose screen shows: From: <;

window_redraw()
	after window_repaint(win)
	call window_repaint(focus)
	allowing window to position the cursor and make it visible
	windows that allow focus need to check for (win->actions & WA_REPAINT)
	to prevent duplicate repainting

typo, spurious 'a'
	* This question can be answered using a locale-dependent letters, e.g.

these need to be paired exactly, making them error prone
	notify_observer_add()
	notify_observer_remove()

export/squash devel/expando
	to neomutt-old because it needs neomutt repo as it merges
	won't give any credit

ifdef color-name ...?

messages that might benefit from \n
plus the keymap.c http:// error
	%d message has been lost. Try reopening the mailbox.
	%d messages have been lost. Try reopening the mailbox.
	%s does not exist. Create it?
	Attachment #%d modified. Update encoding for %s?
	Can't decode all tagged attachments.  MIME-encapsulate the others?
	Can't decode all tagged attachments.  MIME-forward the others?
	Can't postpone.  $postponed is unset
	Can't sign: No key specified. Use Sign As.
	Connected to %s. %s
	Connection lost. Reconnect to POP server?
	Connection to %s lost. Reconnect?
	Error encrypting message. Check your crypt settings.
	Error saving flags. Close anyway?
	Error. Preserving temporary file: %s
	failed to find message in notmuch database. try running 'notmuch new'.
	Fcc failed. (r)etry, alternate (m)ailbox, or (s)kip?
	ID has undefined validity. Do you really want to use the key?
	ID is expired/disabled/revoked. Do you really want to use the key?
	ID is not trusted. Do you really want to use the key?
	ID is not valid. Do you really want to use the key?
	ID is only marginally valid. Do you really want to use the key?
	Inline PGP can't be used with attachments.  Revert to PGP/MIME?
	Inline PGP can't be used with format=flowed.  Revert to PGP/MIME?
	Internal error.  Please submit a bug report.
	Key is not bound.  Press '%s' for help.
	Mailbox is marked unwritable. %s
	Mailbox was externally modified.  Flags may be wrong.
	Message can't be sent inline.  Revert to using PGP/MIME?
	Message contains text matching \$abort_noattach_regex\. Not sending.
	Message of read-only mailbox modified! Ignoring changes.
	MIME type not defined.  Can't view attachment.
	nm_default_url must be: notmuch://<absolute path> . Current: %s
	No crypto backend configured.  Disabling message security setting.
	No matching mailcap entry found.  Viewing as text.
	No Message-Id. Unable to perform operation.
	PGP already selected. Clear and continue?
	Posting to this group not allowed, may be moderated. Continue?
	QRESYNC failed.  Reopening mailbox.
	S/MIME already selected. Clear and continue?
	The message index is incorrect. Try reopening the mailbox.
	This IMAP server is ancient. NeoMutt does not work with it.
	Warning: This alias name may not work.  Fix it?
	[-- Can't run %s. --]\n

guug: neomutt, a TUI email client that lets you zip through emails
mbiscuit: I like the emphasis on speed.

guug_ | flatcap: Another tagline (a bit hippy)-- neomutt: 60 to 0 in 2.3 seconds.

mouse
	guug: So yeah but in the "mouse support thing", my one wish would be some frequently accessible things also accessible by mouse thus opening neomutt to non-power users.
	guug: e.g. the limit thing could be a tiny box [fi(l)ter: ] where user could click to see this expand.

tutorial
	mbiscuit | what you need is some young person with nimble fingers and all the keyboard shortcuts in their head doing a 'this is how fast mailing can be' tutorial
probably need two runs, one at speed, then one slow with explanations and a list of shortcuts/macros used

why doesn't this use ngettext() ?
	if (query_quadoption(c_print, (msg_count == 1) ? _("Print message?") : _("Print tagged messages?")) != MUTT_YES)

doxy typo
	ibar_data_new - Free the private data attached to the MuttWindow

discussions
	(re-)label *all* of them
	move some to old?

pin a "help wanted" issue linking to discussions
	clear out, or transfer, all issues wanting help

