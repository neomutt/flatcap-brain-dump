mnemosyne
	fix 0-index bug

	add function to quit recording
	without altering any registers

private repo for dot-mutt repo

git {continue,abort,skip} for git {am,rebase,cherry-pick,bisect}
git am
	ORIG_HEAD
	rebase-apply/
	status
		On branch b1
		You are in the middle of an am session.
git bisect
	refs/bisect/good
	refs/bisect/good-HASH
	refs/bisect/bad
	refs/bisect/bad-HASH
	BISECT_NAMES
	BISECT_TERMS
	BISECT_LOG
	BISECT_START (vital)
	BISECT_ANCESTORS_OK
	BISECT_EXPECTED_REV
	status
		On branch b1
		You are currently bisecting, started from branch 'b1'.
git cherry-pick
	CHERRY_PICK_HEAD
	MERGE_MSG
	MERGE_RR
	status
		On branch b1
		You are currently cherry-picking commit 97ca7d261.
git rebase
	MERGE_RR
	rebase-apply/
	rr-cache/
	REBASE_HEAD (vital)
	ORIG_HEAD
	status
		rebase in progress; onto 844319ad9
		You are currently rebasing branch 'b1' on '844319ad9'.

code folding - create an exception for <<<< ==== >>>> diff markers?
	how do you continue?

repo: daily, weekly, monthly updates
	-> server

vim de-comment fn to remove #if0

move mutt cron to server

vim-neomutt plugin
	folding for c

script to follow all the projects members

git b(){} needs to disable colour on piping

neo-stats.pl
	ignore issues tagged 'release'
	ignore integration issues?
	or count only 'bugs' and unlabelled

git pr improvements
	config item for upstream (github)
	'refresh' command, if possible to fast-forward
		--force hard reset
	'clean' command if unchanged
		--force lose changes
	stop it pulling tags
	config item for name template, e.g. "pr/%s"
		or --name X (or --name pr%s)
	pr list -- can't tell if they're open

syn match mw "\<Mutt\ze\(Window\|Thread\)\>" conceal

script to keep neo mirrors up-to-date

po multi-fold comment, english, foreign -- why bother?

git map
	read config for default remote

git clone
	always pull in my prepare-commit-msg hook
	(disabled)
	what other defaults?

firstb <REGEX>
	regex if it contains a '*'
	anchored at bol?
	multiple args => not regex
	one arg => git checkout -- no sense in that

list_pull_requests.sh
	get_pull_requests.sh
	reference local neomutt repo

git hook variables
	prepare-commit-msg
	GIT_DIR
	GIT_WORK_TREE
	GIT_INDEX_FILE
	GIT_PREFIX
	GITHEAD_XXX

auto-generate merge commit messages
	modified git log msg
	script for authors
	commented out - but accessible?

histignore M and other uppers

script for "build-all-git-tags"
	publish

fosdem
keysign
	clipboard
	upstairs
	loudhailer
	108 people -> 100mins -> ~50 sigs in return
new people
	get together
travel
	from midi -> town -> tourist info
	where to get maps
	how to navigate
	pay for metro/buses/trams

quickhl command to display highlights (in use)

push all git repos to gitlab, bitbucket
	cron script

git alternates
	list existing alternates
	prune dead alternates
	add new alternates

Find trailers in log messages
	git log --format='%h%n%(trailers:only,unfold)'
	Co-authored-by:
	Signed-off-by:
	Closes: #123

change build scripts/aliases to build in /build
	change 'n' to run build/n

~github
	if a mirror, add an 'upstream' remote
	pull & push if 'upstream' exists

gr clone
	if dir ends in .git make a bare repo

all repos -> laptop: categorise: public, hidden, private
push all pub/hidden to github,gitlab,bitbucket
linode user, cron to sync all repos
backups to disk
push hikes, craggy, notify friend
pull linode image -> laptop for vm generator
change all passwords - save lists somewhere safe
back to apache
get craggy running
get gitolite running
automake let's encrypt
extend home page
fix github/gist scripts and sync
make /home/mutt_mutable non-backup junk like caches
ask linode about OpenVPN + IPv6
hikes -> docker
craggy -> docker
dotfiles -> gh
vimrc -> gh

quickhl spurious 9th colour

web linode manager

git map -- do fetch first

git neo
	mkdir .git/files
	copy hooks too

git build
	create separate numbered dirs, with commit hash
	build-01-xxxxxx

git ignore
	.build
	build*

fix build2 for mutt

fix bash-completion for 'm'
	.build/Makefile

fix neom alias âˆ€ maintainers/reviewers

syntax and {} paragraph keys don't work in visual mode

all complex git aliases -> scripts -> repo

B params
	. build here (default)
	DIR build elsewhere, e.g. build123

m - make / cd make (& cp -s ?)

n neo / .build/neo

github dir
	flatcap/github remotes not origin
	mirrors need 2 remotes upstream and 'other'

test pretty-git-prompt

custom gdb pretty print for Buffer, FILE (fileno), etc

snapshots
	git repack -ad
	remove alternates file
	split into separate script

fix git hook for cherry-pick

server
	service for neo-bot
	service for www news update
	service for weechat
		start each 2 mins after boot?
	start tor 5mins after boot
	unify swap dev/file
	realloc space
		larger root
		everything else on /home
	service for git pull/sync

