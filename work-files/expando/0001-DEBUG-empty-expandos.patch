From 6604b210c2ae976d7dac3cba8de2dcc65b3ceb67 Mon Sep 17 00:00:00 2001
From: Richard Russon <rich@flatcap.org>
Date: Wed, 16 Oct 2024 11:47:13 +0100
Subject: [PATCH] DEBUG: empty expandos

Empty all the default values for expandos, so that nothing gets set on startup.

---
 alias/config.c     |  4 ++--
 autocrypt/config.c |  2 +-
 browser/config.c   |  6 +++---
 compose/config.c   |  2 +-
 history/config.c   |  2 +-
 mutt_config.c      | 14 +++++++-------
 ncrypt/config.c    |  2 +-
 nntp/config.c      |  2 +-
 pager/config.c     |  2 +-
 pattern/config.c   |  2 +-
 send/config.c      |  8 ++++----
 sidebar/config.c   |  2 +-
 12 files changed, 24 insertions(+), 24 deletions(-)

diff --git a/alias/config.c b/alias/config.c
index 3add8b884..60bafb152 100644
--- a/alias/config.c
+++ b/alias/config.c
@@ -99,7 +99,7 @@ static struct ConfigDef AliasVars[] = {
   { "alias_file", DT_PATH|D_PATH_FILE, IP "~/.neomuttrc", 0, NULL,
     "Save new aliases to this file"
   },
-  { "alias_format", DT_EXPANDO|D_NOT_EMPTY, IP "%3n %f%t %-15a %-56r | %c", IP &AliasFormatDef, NULL,
+  { "alias_format", DT_EXPANDO, 0, IP &AliasFormatDef, NULL,
     "printf-like format string for the alias menu"
   },
   { "sort_alias", DT_SORT|D_SORT_REVERSE, SORT_ALIAS, IP SortAliasMethods, NULL,
@@ -108,7 +108,7 @@ static struct ConfigDef AliasVars[] = {
   { "query_command", DT_STRING|D_STRING_COMMAND, 0, 0, NULL,
     "External command to query and external address book"
   },
-  { "query_format", DT_EXPANDO|D_NOT_EMPTY, IP "%3c %t %-25.25n %-25.25a | %e", IP &QueryFormatDef, NULL,
+  { "query_format", DT_EXPANDO, 0, IP &QueryFormatDef, NULL,
     "printf-like format string for the query menu (address book)"
   },
   { NULL },
diff --git a/autocrypt/config.c b/autocrypt/config.c
index a905797ea..605bcc31a 100644
--- a/autocrypt/config.c
+++ b/autocrypt/config.c
@@ -66,7 +66,7 @@ static struct ConfigDef AutocryptVars[] = {
   { "autocrypt", DT_BOOL, false, 0, NULL,
     "Enables the Autocrypt feature"
   },
-  { "autocrypt_acct_format", DT_EXPANDO, IP "%4n %-30a %20p %10s", IP &AutocryptFormatDef, NULL,
+  { "autocrypt_acct_format", DT_EXPANDO, 0, IP &AutocryptFormatDef, NULL,
     "Format of the autocrypt account menu"
   },
   { "autocrypt_dir", DT_PATH|D_PATH_DIR, IP "~/.mutt/autocrypt", 0, NULL,
diff --git a/browser/config.c b/browser/config.c
index b1c469c1a..d48889887 100644
--- a/browser/config.c
+++ b/browser/config.c
@@ -137,13 +137,13 @@ static struct ConfigDef BrowserVars[] = {
   { "browser_abbreviate_mailboxes", DT_BOOL, true, 0, NULL,
     "Abbreviate mailboxes using '~' and '=' in the browser"
   },
-  { "folder_format", DT_EXPANDO|D_NOT_EMPTY, IP "%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %i", IP &FolderFormatDef, NULL,
+  { "folder_format", DT_EXPANDO, 0, IP &FolderFormatDef, NULL,
     "printf-like format string for the browser's display of folders"
   },
-  { "group_index_format", DT_EXPANDO|D_NOT_EMPTY, IP "%4C %M%N %5s  %-45.45f %d", IP &GroupIndexFormatDef, NULL,
+  { "group_index_format", DT_EXPANDO, 0, IP &GroupIndexFormatDef, NULL,
     "(nntp) printf-like format string for the browser's display of newsgroups"
   },
-  { "mailbox_folder_format", DT_EXPANDO|D_NOT_EMPTY, IP "%2C %<n?%6n&      > %6m %i", IP &FolderFormatDef, NULL,
+  { "mailbox_folder_format", DT_EXPANDO, 0, IP &FolderFormatDef, NULL,
     "printf-like format string for the browser's display of mailbox folders"
   },
   { "mask", DT_REGEX|D_REGEX_MATCH_CASE|D_REGEX_ALLOW_NOT|D_REGEX_NOSUB, IP "!^\\.[^.]", 0, NULL,
diff --git a/compose/config.c b/compose/config.c
index 4afffd096..ed348401a 100644
--- a/compose/config.c
+++ b/compose/config.c
@@ -67,7 +67,7 @@ static struct ConfigDef ComposeVars[] = {
     "Prevent the accidental deletion of the composed message"
   },
   // L10N: $compose_format default format
-  { "compose_format", DT_EXPANDO|D_L10N_STRING, IP N_("-- NeoMutt: Compose  [Approx. msg size: %l   Atts: %a]%>-"), IP &ComposeFormatDef, NULL,
+  { "compose_format", DT_EXPANDO|D_L10N_STRING, 0, IP &ComposeFormatDef, NULL,
     "printf-like format string for the Compose panel's status bar"
   },
   { "compose_show_user_headers", DT_BOOL, true, 0, NULL,
diff --git a/history/config.c b/history/config.c
index 98c23ca00..9b4389c2d 100644
--- a/history/config.c
+++ b/history/config.c
@@ -61,7 +61,7 @@ static struct ConfigDef HistoryVars[] = {
   { "history_file", DT_PATH|D_PATH_FILE, IP "~/.mutthistory", 0, NULL,
     "File to save history in"
   },
-  { "history_format", DT_EXPANDO, IP "%s", IP &HistoryFormatDef, NULL,
+  { "history_format", DT_EXPANDO, 0, IP &HistoryFormatDef, NULL,
     "printf-like format string for the history menu"
   },
   { "history_remove_dups", DT_BOOL, false, 0, NULL,
diff --git a/mutt_config.c b/mutt_config.c
index 1a9124737..2b653c1ea 100644
--- a/mutt_config.c
+++ b/mutt_config.c
@@ -428,7 +428,7 @@ static struct ConfigDef MainVars[] = {
   { "assumed_charset", DT_SLIST|D_SLIST_SEP_COLON|D_SLIST_ALLOW_EMPTY, 0, 0, charset_slist_validator,
     "If a message is missing a character set, assume this character set"
   },
-  { "attach_format", DT_EXPANDO|D_NOT_EMPTY, IP "%u%D%I %t%4n %T%d %> [%.7m/%.10M, %.6e%<C?, %C>, %s] ", IP &AttachFormatDef, NULL,
+  { "attach_format", DT_EXPANDO, 0, IP &AttachFormatDef, NULL,
     "printf-like format string for the attachment menu"
   },
   { "attach_save_dir", DT_PATH|D_PATH_DIR, IP "./", 0, NULL,
@@ -584,10 +584,10 @@ static struct ConfigDef MainVars[] = {
   { "include_only_first", DT_BOOL, false, 0, NULL,
     "Only include the first attachment when replying"
   },
-  { "indent_string", DT_EXPANDO, IP "> ", IP IndexFormatDefNoPadding, NULL,
+  { "indent_string", DT_EXPANDO, 0, IP IndexFormatDefNoPadding, NULL,
     "String used to indent 'reply' text"
   },
-  { "index_format", DT_EXPANDO|D_NOT_EMPTY, IP "%4C %Z %{%b %d} %-15.15L (%<l?%4l&%4c>) %s", IP &IndexFormatDef, NULL,
+  { "index_format", DT_EXPANDO, 0, IP &IndexFormatDef, NULL,
     "printf-like format string for the index menu (emails)"
   },
   { "keep_flagged", DT_BOOL, false, 0, NULL,
@@ -632,7 +632,7 @@ static struct ConfigDef MainVars[] = {
   { "message_cache_dir", DT_PATH|D_PATH_DIR, 0, 0, NULL,
     "(imap/pop) Directory for the message cache"
   },
-  { "message_format", DT_EXPANDO|D_NOT_EMPTY, IP "%s", IP &IndexFormatDef, NULL,
+  { "message_format", DT_EXPANDO, 0, IP &IndexFormatDef, NULL,
     "printf-like format string for listing attached messages"
   },
   { "meta_key", DT_BOOL, false, 0, NULL,
@@ -817,7 +817,7 @@ static struct ConfigDef MainVars[] = {
     "Indicator characters for the status bar"
   },
   // L10N: $status_format default format
-  { "status_format", DT_EXPANDO|D_L10N_STRING, IP N_("-%r-NeoMutt: %D [Msgs:%<M?%M/>%m%<n? New:%n>%<o? Old:%o>%<d? Del:%d>%<F? Flag:%F>%<t? Tag:%t>%<p? Post:%p>%<b? Inc:%b>%<l? %l>]---(%<T?%T/>%s/%S)-%>-(%P)---"), IP &StatusFormatDef, NULL,
+  { "status_format", DT_EXPANDO|D_L10N_STRING, 0, IP &StatusFormatDef, NULL,
     "printf-like format string for the index's status line"
   },
   { "status_on_top", DT_BOOL, false, 0, NULL,
@@ -854,11 +854,11 @@ static struct ConfigDef MainVars[] = {
     "Allow NeoMutt to set the terminal status line and icon"
   },
   // L10N: $ts_icon_format default format
-  { "ts_icon_format", DT_EXPANDO|D_L10N_STRING, IP N_("M%<n?AIL&ail>"), IP StatusFormatDefNoPadding, NULL,
+  { "ts_icon_format", DT_EXPANDO|D_L10N_STRING, 0, IP StatusFormatDefNoPadding, NULL,
     "printf-like format string for the terminal's icon title"
   },
   // L10N: $ts_status_format default format
-  { "ts_status_format", DT_EXPANDO|D_L10N_STRING, IP N_("NeoMutt with %<m?%m messages&no messages>%<n? [%n NEW]>"), IP StatusFormatDefNoPadding, NULL,
+  { "ts_status_format", DT_EXPANDO|D_L10N_STRING, 0, IP StatusFormatDefNoPadding, NULL,
     "printf-like format string for the terminal's status (window title)"
   },
   { "use_domain", DT_BOOL, true, 0, NULL,
diff --git a/ncrypt/config.c b/ncrypt/config.c
index 1e4847d6e..42603fcc1 100644
--- a/ncrypt/config.c
+++ b/ncrypt/config.c
@@ -144,7 +144,7 @@ static struct ConfigDef NcryptVars[] = {
   { "pgp_default_key", DT_STRING, 0, 0, NULL,
     "Default key to use for PGP operations"
   },
-  { "pgp_entry_format", DT_EXPANDO|D_NOT_EMPTY, IP "%4n %t%f %4l/0x%k %-4a %2c %u", IP &PgpEntryFormatDef, NULL,
+  { "pgp_entry_format", DT_EXPANDO, 0, IP &PgpEntryFormatDef, NULL,
     "printf-like format string for the PGP key selection menu"
   },
   { "pgp_ignore_subkeys", DT_BOOL, true, 0, NULL,
diff --git a/nntp/config.c b/nntp/config.c
index 94671c38a..b052e4539 100644
--- a/nntp/config.c
+++ b/nntp/config.c
@@ -67,7 +67,7 @@ static struct ConfigDef NntpVars[] = {
   { "newsgroups_charset", DT_STRING, IP "utf-8", 0, charset_validator,
     "(nntp) Character set of newsgroups' descriptions"
   },
-  { "newsrc", DT_EXPANDO|D_PATH_FILE, IP "~/.newsrc", IP &NntpFormatDef, NULL,
+  { "newsrc", DT_EXPANDO|D_PATH_FILE, 0, IP &NntpFormatDef, NULL,
     "(nntp) File containing list of subscribed newsgroups"
   },
   { "news_cache_dir", DT_PATH|D_PATH_DIR, IP "~/.neomutt", 0, NULL,
diff --git a/pager/config.c b/pager/config.c
index 5af7047de..a99f7acbb 100644
--- a/pager/config.c
+++ b/pager/config.c
@@ -57,7 +57,7 @@ static struct ConfigDef PagerVars[] = {
   { "pager_context", DT_NUMBER|D_INTEGER_NOT_NEGATIVE, 0, 0, NULL,
     "Number of lines of overlap when changing pages in the pager"
   },
-  { "pager_format", DT_EXPANDO, IP "-%Z- %C/%m: %-20.20n   %s%*  -- (%P)", IP &IndexFormatDef, NULL,
+  { "pager_format", DT_EXPANDO, 0, IP &IndexFormatDef, NULL,
     "printf-like format string for the pager's status bar"
   },
   { "pager_index_lines", DT_NUMBER|D_INTEGER_NOT_NEGATIVE, 0, 0, NULL,
diff --git a/pattern/config.c b/pattern/config.c
index a01fcbcd2..ba9e85ca1 100644
--- a/pattern/config.c
+++ b/pattern/config.c
@@ -59,7 +59,7 @@ static struct ConfigDef PatternVars[] = {
   { "external_search_command", DT_STRING|D_STRING_COMMAND, 0, 0, NULL,
     "External search command"
   },
-  { "pattern_format", DT_EXPANDO, IP "%2n %-15e  %d", IP &PatternFormatDef, NULL,
+  { "pattern_format", DT_EXPANDO, 0, IP &PatternFormatDef, NULL,
     "printf-like format string for the pattern completion menu"
   },
   { "thorough_search", DT_BOOL, true, 0, NULL,
diff --git a/send/config.c b/send/config.c
index 7bc09c287..feca9e90e 100644
--- a/send/config.c
+++ b/send/config.c
@@ -167,7 +167,7 @@ static struct ConfigDef SendVars[] = {
     "When attaching files, use one of these character sets"
   },
   // L10N: $attribution_intro default format
-  { "attribution_intro", DT_EXPANDO|D_L10N_STRING, IP N_("On %d, %n wrote:"), IP IndexFormatDefNoPadding, NULL,
+  { "attribution_intro", DT_EXPANDO|D_L10N_STRING, 0, IP IndexFormatDefNoPadding, NULL,
     "Message to start a reply, 'On DATE, PERSON wrote:'"
   },
   { "attribution_locale", DT_STRING, 0, 0, NULL,
@@ -234,11 +234,11 @@ static struct ConfigDef SendVars[] = {
     "Forward attachments when forwarding a message"
   },
   // L10N: $forward_attribution_intro default format
-  { "forward_attribution_intro", DT_EXPANDO|D_L10N_STRING, IP N_("----- Forwarded message from %f -----"), IP IndexFormatDefNoPadding, NULL,
+  { "forward_attribution_intro", DT_EXPANDO|D_L10N_STRING, 0, IP IndexFormatDefNoPadding, NULL,
     "Prefix message for forwarded messages"
   },
   // L10N: $forward_attribution_trailer default format
-  { "forward_attribution_trailer", DT_EXPANDO|D_L10N_STRING, IP N_("----- End forwarded message -----"), IP IndexFormatDefNoPadding, NULL,
+  { "forward_attribution_trailer", DT_EXPANDO|D_L10N_STRING, 0, IP IndexFormatDefNoPadding, NULL,
     "Suffix message for forwarded messages"
   },
   { "forward_decrypt", DT_BOOL, true, 0, NULL,
@@ -247,7 +247,7 @@ static struct ConfigDef SendVars[] = {
   { "forward_edit", DT_QUAD, MUTT_YES, 0, NULL,
     "Automatically start the editor when forwarding a message"
   },
-  { "forward_format", DT_EXPANDO|D_NOT_EMPTY, IP "[%a: %s]", IP IndexFormatDefNoPadding, NULL,
+  { "forward_format", DT_EXPANDO, 0, IP IndexFormatDefNoPadding, NULL,
     "printf-like format string to control the subject when forwarding a message"
   },
   { "forward_references", DT_BOOL, false, 0, NULL,
diff --git a/sidebar/config.c b/sidebar/config.c
index c1a4a4b4c..57e435f8e 100644
--- a/sidebar/config.c
+++ b/sidebar/config.c
@@ -102,7 +102,7 @@ static struct ConfigDef SidebarVars[] = {
   { "sidebar_folder_indent", DT_BOOL, false, 0, NULL,
     "(sidebar) Indent nested folders"
   },
-  { "sidebar_format", DT_EXPANDO|D_NOT_EMPTY, IP "%D%*  %n", IP &SidebarFormatDef, NULL,
+  { "sidebar_format", DT_EXPANDO, 0, IP &SidebarFormatDef, NULL,
     "(sidebar) printf-like format string for the sidebar panel"
   },
   { "sidebar_indent_string", DT_STRING, IP "  ", 0, NULL,
