
<esc>[ NUM { ;NUM } LETTER

--------------------------------------------------------------------------------

ESC [ 	0x9B 	CSI 	Control Sequence Introducer
Starts most of the useful sequences, terminated by a byte in the range 0x40
through 0x7E.

CSI (Control Sequence Introducer) sequences

For Control Sequence Introducer, or CSI, commands, the ESC [ (written as \e[ or
\033[ in several programming and scripting languages) is followed by any number
(including none) of "parameter bytes" in the range 0x30–0x3F (ASCII 0–9:;<=>?),
then by any number of "intermediate bytes" in the range 0x20–0x2F (ASCII space
and !"#$%&'()*+,-./), then finally by a single "final byte" in the range
0x40–0x7E (ASCII @A–Z[\]^_`a–z{|}~).

All common sequences just use the parameters as a series of semicolon-separated
numbers such as 1;2;3. Missing numbers are treated as 0 (1;;3 acts like the
middle number is 0, and no parameters at all in ESC[m acts like a 0 reset
code). Some sequences (such as CUU) treat 0 as 1 in order to make missing
parameters useful.

A subset of arrangements was declared "private" so that terminal manufacturers
could insert their own sequences without conflicting with the standard.
Sequences containing the parameter bytes <=>? or the final bytes 0x70–0x7E
(p–z{|}~) are private.

The behavior of the terminal is undefined in the case where a CSI sequence
contains any character outside of the range 0x20–0x7E. These illegal characters
are either C0 control characters (the range 0–0x1F), DEL (0x7F), or bytes with
the high bit set. Possible responses are to ignore the byte, to process it
immediately, and furthermore whether to continue with the CSI sequence, to
abort it immediately, or to ignore the rest of it.

--------------------------------------------------------------------------------

ESC \ 	0x9C 	ST 	String Terminator 
Terminates strings in other controls.

ESC ] 	0x9D 	OSC 	Operating System Command 
Starts a control string for the operating system to use, terminated by ST.

OSC (Operating System Command) sequences

Most Operating System Command sequences were defined by Xterm, but many are
also supported by other terminal emulators. For historical reasons, Xterm can
end the command with BEL as well as the standard ST. For example, Xterm
allows the window title to be set by ESC ]0;this is the window title BEL.

A non-xterm extension is the hyperlink, ESC ]8;;link ST from 2017, used by
VTE, iTerm2, and mintty.

The Linux console uses ESC ] P n rr gg bb to change the palette, which, if
hard-coded into an application, may hang other terminals. However,
appending ST will be ignored by Linux and form a proper, ignorable sequence for
other terminals.

--------------------------------------------------------------------------------

state_attachment_marker()
	snprintf(marker, sizeof(marker), "\033]9;%" PRIu64 "\a", mutt_rand64());

state_protected_header_marker()
	snprintf(marker, sizeof(marker), "\033]8;%lld\a", (long long) mutt_date_now());

