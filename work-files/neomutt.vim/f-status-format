" Ref: status_format_str() in status.c
call s:escapesConditionals('StatusFormat', '[bDdFfhLlMmnoPpRrSsTtuVv]', 1, 1)
" Defines: muttrcStatusFormatEscapes, muttrcStatusFormatConditionals

syntax region muttrcStatusFormatString contained skipwhite keepend start=+"+ skip=+\\"+ end=+"+ contains=muttrcStatusFormatEscapes,muttrcStatusFormatConditionals,muttrcFormatErrors nextgroup=muttrcVPrefix,muttrcVarBool,muttrcVarQuad,muttrcVarNum,muttrcVarString
syntax region muttrcStatusFormatString contained skipwhite keepend start=+'+ skip=+\\'+ end=+'+ contains=muttrcStatusFormatEscapes,muttrcStatusFormatConditionals,muttrcFormatErrors nextgroup=muttrcVPrefix,muttrcVarBool,muttrcVarQuad,muttrcVarNum,muttrcVarString

syntax match muttrcVarEqualsStatusFormat contained skipwhite "=" nextgroup=muttrcStatusFormatString

syntax keyword muttrcVarString contained skipwhite status_format ts_icon_format ts_status_format nextgroup=muttrcVarEqualsStatusFormat

highlight def link muttrcStatusFormatConditionals muttrcFormatConditionals2
highlight def link muttrcStatusFormatEscapes      muttrcEscape
highlight def link muttrcStatusFormatString       muttrcString

" config        base-name    conditionals                   escapes                   format-string            var-equals
" status_format StatusFormat muttrcStatusFormatConditionals muttrcStatusFormatEscapes muttrcStatusFormatString muttrcVarEqualsStatusFormat
" ts_icon_format                                                                                                  
" ts_status_format                                                                                                

" vim: syntax=vim
