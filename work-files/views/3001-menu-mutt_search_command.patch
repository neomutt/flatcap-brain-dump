From 90ce005bed6ecb66cbb61d9877db5b5d86954327 Mon Sep 17 00:00:00 2001
From: Richard Russon <rich@flatcap.org>
Date: Sat, 13 May 2023 18:03:33 +0100
Subject: [PATCH 1/2] menu: mutt_search_command()

---
 index/functions.c    | 2 +-
 pattern/lib.h        | 2 +-
 pattern/pattern.c    | 5 ++---
 postpone/functions.c | 2 +-
 4 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/index/functions.c b/index/functions.c
index 95c34f0b7..c31575361 100644
--- a/index/functions.c
+++ b/index/functions.c
@@ -2021,7 +2021,7 @@ static int op_search(struct IndexSharedData *shared, struct IndexPrivateData *pr
   // searching for next/previous/... needs to be on a message and
   // thus a non-empty mailbox
   int index = menu_get_index(priv->menu);
-  index = mutt_search_command(shared->mailbox_view, priv->menu, index, op);
+  index = mutt_search_command(shared->mailbox_view, index, op);
   if (index != -1)
     menu_set_index(priv->menu, index);
 
diff --git a/pattern/lib.h b/pattern/lib.h
index f7192fdf6..58d306391 100644
--- a/pattern/lib.h
+++ b/pattern/lib.h
@@ -190,7 +190,7 @@ bool mutt_is_list_recipient(bool all_addr, struct Envelope *env);
 bool mutt_is_subscribed_list_recipient(bool all_addr, struct Envelope *env);
 int mutt_pattern_func(struct MailboxView *mv, int op, char *prompt);
 int mutt_pattern_alias_func(char *prompt, struct AliasMenuData *mdata, struct Menu *menu);
-int mutt_search_command(struct MailboxView *mv, struct Menu *menu, int cur, int op);
+int mutt_search_command(struct MailboxView *mv, int cur, int op);
 int mutt_search_alias_command(struct Menu *menu, int cur, int op);
 
 #endif /* MUTT_PATTERN_LIB_H */
diff --git a/pattern/pattern.c b/pattern/pattern.c
index 095e13052..cb64f07f7 100644
--- a/pattern/pattern.c
+++ b/pattern/pattern.c
@@ -419,13 +419,12 @@ bail:
 /**
  * mutt_search_command - Perform a search
  * @param mv   Mailbox view to search through
- * @param menu Current Menu
  * @param cur  Index number of current email
  * @param op   Operation to perform, e.g. OP_SEARCH_NEXT
  * @retval >=0 Index of matching email
  * @retval -1  No match, or error
  */
-int mutt_search_command(struct MailboxView *mv, struct Menu *menu, int cur, int op)
+int mutt_search_command(struct MailboxView *mv, int cur, int op)
 {
   struct Progress *progress = NULL;
   struct Buffer *buf = NULL;
@@ -466,7 +465,7 @@ int mutt_search_command(struct MailboxView *mv, struct Menu *menu, int cur, int
       mutt_pattern_free(&SearchPattern);
       err.dsize = 256;
       err.data = mutt_mem_malloc(err.dsize);
-      SearchPattern = mutt_pattern_comp(mv, menu, tmp->data, MUTT_PC_FULL_MSG, &err);
+      SearchPattern = mutt_pattern_comp(mv, mv->menu, tmp->data, MUTT_PC_FULL_MSG, &err);
       if (!SearchPattern)
       {
         buf_pool_release(&buf);
diff --git a/postpone/functions.c b/postpone/functions.c
index 7e76b8812..e572a5087 100644
--- a/postpone/functions.c
+++ b/postpone/functions.c
@@ -102,7 +102,7 @@ static int op_search(struct PostponeData *pd, int op)
 {
   int index = menu_get_index(pd->menu);
   struct MailboxView *mv = pd->mailbox_view;
-  index = mutt_search_command(mv, pd->menu, index, op);
+  index = mutt_search_command(mv, index, op);
   if (index != -1)
     menu_set_index(pd->menu, index);
 
